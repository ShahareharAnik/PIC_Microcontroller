

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 01 15:16:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTDbits	set	8
   170     0007                     _PORTC	set	7
   171     0088                     _TRISD	set	136
   172     0087                     _TRISC	set	135
   173                           
   174                           	psect	strings
   175     0004                     __pstrings:
   176     0004                     stringtab:
   177     0004                     __stringtab:
   178     0004                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181     0004                     stringdir:
   182     0004  3000               	movlw	high stringdir
   183     0005  008A               	movwf	10
   184     0006  0804               	movf	4,w
   185     0007  0A84               	incf	4,f
   186     0008  0782               	addwf	2,f
   187     0009                     __stringbase:
   188     0009  3400               	retlw	0
   189     000A                     __end_of__stringtab:
   190     000A                     STR_2:
   191     000A  3443               	retlw	67	;'C'
   192     000B  346F               	retlw	111	;'o'
   193     000C  346E               	retlw	110	;'n'
   194     000D  3474               	retlw	116	;'t'
   195     000E  3472               	retlw	114	;'r'
   196     000F  346F               	retlw	111	;'o'
   197     0010  346C               	retlw	108	;'l'
   198     0011  346C               	retlw	108	;'l'
   199     0012  3465               	retlw	101	;'e'
   200     0013  3472               	retlw	114	;'r'
   201     0014  3400               	retlw	0
   202     0015                     STR_1:
   203     0015  344D               	retlw	77	;'M'
   204     0016  3469               	retlw	105	;'i'
   205     0017  3463               	retlw	99	;'c'
   206     0018  3472               	retlw	114	;'r'
   207     0019  346F               	retlw	111	;'o'
   208     001A  3400               	retlw	0
   209                           
   210                           	psect	cinit
   211     07FC                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07FC                     __initialization:
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2FD3   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223     0071                     __pcstackCOMMON:
   224     0071                     ?_lcd_data:
   225     0071                     ??_lcd_data:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0071                     ?_lcd_command:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0071                     ??_lcd_command:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0071                     ?_lcd_initialise:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0071                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240                           
   241                           ; 1 bytes @ 0x0
   242     0071                     	ds	2
   243     0073                     lcd_data@data:
   244     0073                     lcd_command@cmd:	
   245                           ; 1 bytes @ 0x2
   246                           
   247                           
   248                           ; 1 bytes @ 0x2
   249     0073                     	ds	1
   250     0074                     ?_lcd_string:
   251     0074                     ??_lcd_initialise:	
   252                           ; 1 bytes @ 0x3
   253                           
   254     0074                     lcd_string@num:	
   255                           ; 1 bytes @ 0x3
   256                           
   257                           
   258                           ; 1 bytes @ 0x3
   259     0074                     	ds	1
   260     0075                     ??_lcd_string:
   261     0075                     lcd_string@str:	
   262                           ; 1 bytes @ 0x4
   263                           
   264                           
   265                           ; 1 bytes @ 0x4
   266     0075                     	ds	1
   267     0076                     lcd_string@i:
   268                           
   269                           ; 1 bytes @ 0x5
   270     0076                     	ds	1
   271     0077                     ??_main:
   272                           
   273                           	psect	maintext
   274     07D3                     __pmaintext:	
   275                           ; 1 bytes @ 0x6
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 59 in file "lcd16x2.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called: 2
   301 ;; This function calls:
   302 ;;		_lcd_command
   303 ;;		_lcd_initialise
   304 ;;		_lcd_string
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310     07D3                     _main:	
   311                           ;psect for function _main
   312                           
   313     07D3                     l675:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   316                           
   317                           
   318                           ;lcd16x2.c: 61:         TRISC =0x00;
   319     07D3  1683               	bsf	3,5	;RP0=1, select bank1
   320     07D4  1303               	bcf	3,6	;RP1=0, select bank1
   321     07D5  0187               	clrf	7	;volatile
   322                           
   323                           ;lcd16x2.c: 62:         TRISD = 0x00;
   324     07D6  0188               	clrf	8	;volatile
   325     07D7                     l677:
   326                           
   327                           ;lcd16x2.c: 63:         lcd_initialise();
   328     07D7  120A  118A  279F  120A  118A  	fcall	_lcd_initialise
   329     07DC                     l679:
   330                           
   331                           ;lcd16x2.c: 65:             lcd_command(0x83);
   332     07DC  3083               	movlw	131
   333     07DD  120A  118A  2777  120A  118A  	fcall	_lcd_command
   334     07E2                     l681:
   335                           
   336                           ;lcd16x2.c: 66:             lcd_string("Micro",6);
   337     07E2  3006               	movlw	6
   338     07E3  00F4               	movwf	lcd_string@num
   339     07E4  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   340     07E5  120A  118A  27B8  120A  118A  	fcall	_lcd_string
   341     07EA                     l683:
   342                           
   343                           ;lcd16x2.c: 67:             lcd_command(0xC3);
   344     07EA  30C3               	movlw	195
   345     07EB  120A  118A  2777  120A  118A  	fcall	_lcd_command
   346     07F0                     l685:
   347                           
   348                           ;lcd16x2.c: 68:             lcd_string("Controller",11);
   349     07F0  300B               	movlw	11
   350     07F1  00F4               	movwf	lcd_string@num
   351     07F2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   352     07F3  120A  118A  27B8  120A  118A  	fcall	_lcd_string
   353     07F8  2FDC               	goto	l679
   354     07F9  120A  118A  2801   	ljmp	start
   355     07FC                     __end_of_main:
   356                           
   357                           	psect	text1
   358     07B8                     __ptext1:	
   359 ;; *************** function _lcd_string *****************
   360 ;; Defined at:
   361 ;;		line 45 in file "lcd16x2.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  str             1    wreg     PTR const unsigned char 
   364 ;;		 -> STR_2(11), STR_1(6), 
   365 ;;  num             1    3[COMMON] unsigned char 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  str             1    4[COMMON] PTR const unsigned char 
   368 ;;		 -> STR_2(11), STR_1(6), 
   369 ;;  i               1    5[COMMON] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         1       0       0       0       0
   380 ;;      Locals:         2       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0
   382 ;;      Totals:         3       0       0       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; Hardware stack levels required when called: 1
   386 ;; This function calls:
   387 ;;		_lcd_data
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393     07B8                     _lcd_string:	
   394                           ;psect for function _lcd_string
   395                           
   396                           
   397                           ;incstack = 0
   398                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   399                           ;lcd_string@str stored from wreg
   400     07B8  00F5               	movwf	lcd_string@str
   401     07B9                     l667:
   402                           
   403                           ;lcd16x2.c: 45: void lcd_string(const unsigned char *str, unsigned char num);lcd16x2.c: 
      +                          46: {;lcd16x2.c: 47:     unsigned char i;;lcd16x2.c: 48:     for(i=0;i<num;i++){
   404     07B9  01F6               	clrf	lcd_string@i
   405     07BA  2FCC               	goto	l673
   406     07BB                     l669:
   407                           
   408                           ;lcd16x2.c: 49:         lcd_data(str[i]);
   409     07BB  0876               	movf	lcd_string@i,w
   410     07BC  0775               	addwf	lcd_string@str,w
   411     07BD  0084               	movwf	4
   412     07BE  120A  118A  2004  120A  118A  	fcall	stringdir
   413     07C3  120A  118A  278B  120A  118A  	fcall	_lcd_data
   414     07C8                     l671:
   415                           
   416                           ;lcd16x2.c: 50:     }
   417     07C8  3001               	movlw	1
   418     07C9  00FF               	movwf	btemp+1
   419     07CA  087F               	movf	btemp+1,w
   420     07CB  07F6               	addwf	lcd_string@i,f
   421     07CC                     l673:
   422     07CC  0874               	movf	lcd_string@num,w
   423     07CD  0276               	subwf	lcd_string@i,w
   424     07CE  1C03               	skipc
   425     07CF  2FD1               	goto	u21
   426     07D0  2FD2               	goto	u20
   427     07D1                     u21:
   428     07D1  2FBB               	goto	l669
   429     07D2                     u20:
   430     07D2                     l22:
   431     07D2  0008               	return
   432     07D3                     __end_of_lcd_string:
   433                           
   434                           	psect	text2
   435     078B                     __ptext2:	
   436 ;; *************** function _lcd_data *****************
   437 ;; Defined at:
   438 ;;		line 29 in file "lcd16x2.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  data            1    wreg     unsigned char 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  data            1    2[COMMON] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         1       0       0       0       0
   454 ;;      Temps:          2       0       0       0       0
   455 ;;      Totals:         3       0       0       0       0
   456 ;;Total ram usage:        3 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_lcd_string
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     078B                     _lcd_data:	
   466                           ;psect for function _lcd_data
   467                           
   468                           
   469                           ;incstack = 0
   470                           ; Regs used in _lcd_data: [wreg]
   471                           ;lcd_data@data stored from wreg
   472     078B  00F3               	movwf	lcd_data@data
   473     078C                     l625:
   474                           
   475                           ;lcd16x2.c: 30:     PORTC = data;
   476     078C  0873               	movf	lcd_data@data,w
   477     078D  1283               	bcf	3,5	;RP0=0, select bank0
   478     078E  1303               	bcf	3,6	;RP1=0, select bank0
   479     078F  0087               	movwf	7	;volatile
   480     0790                     l627:
   481                           
   482                           ;lcd16x2.c: 31:     PORTDbits.RD0 = 1;
   483     0790  1408               	bsf	8,0	;volatile
   484     0791                     l629:
   485                           
   486                           ;lcd16x2.c: 32:     PORTDbits.RD1 = 0;
   487     0791  1088               	bcf	8,1	;volatile
   488     0792                     l631:
   489                           
   490                           ;lcd16x2.c: 33:     PORTDbits.RD2 = 1;
   491     0792  1508               	bsf	8,2	;volatile
   492                           
   493                           ;lcd16x2.c: 34:     _delay((unsigned long)((5)*(4000000/4000.0)));
   494     0793  3007               	movlw	7
   495     0794  00F2               	movwf	??_lcd_data+1
   496     0795  307D               	movlw	125
   497     0796  00F1               	movwf	??_lcd_data
   498     0797                     u37:
   499     0797  0BF1               	decfsz	??_lcd_data,f
   500     0798  2F97               	goto	u37
   501     0799  0BF2               	decfsz	??_lcd_data+1,f
   502     079A  2F97               	goto	u37
   503     079B                     l633:
   504                           
   505                           ;lcd16x2.c: 35:     PORTDbits.RD2 = 0;
   506     079B  1283               	bcf	3,5	;RP0=0, select bank0
   507     079C  1303               	bcf	3,6	;RP1=0, select bank0
   508     079D  1108               	bcf	8,2	;volatile
   509     079E                     l13:
   510     079E  0008               	return
   511     079F                     __end_of_lcd_data:
   512                           
   513                           	psect	text3
   514     079F                     __ptext3:	
   515 ;; *************** function _lcd_initialise *****************
   516 ;; Defined at:
   517 ;;		line 52 in file "lcd16x2.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 1
   538 ;; This function calls:
   539 ;;		_lcd_command
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     079F                     _lcd_initialise:	
   546                           ;psect for function _lcd_initialise
   547                           
   548     079F                     l653:	
   549                           ;incstack = 0
   550                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   551                           
   552                           
   553                           ;lcd16x2.c: 53:     lcd_command(0x38);
   554     079F  3038               	movlw	56
   555     07A0  120A  118A  2777  120A  118A  	fcall	_lcd_command
   556                           
   557                           ;lcd16x2.c: 54:     lcd_command(0x06);
   558     07A5  3006               	movlw	6
   559     07A6  120A  118A  2777  120A  118A  	fcall	_lcd_command
   560                           
   561                           ;lcd16x2.c: 55:     lcd_command(0x0C);
   562     07AB  300C               	movlw	12
   563     07AC  120A  118A  2777  120A  118A  	fcall	_lcd_command
   564                           
   565                           ;lcd16x2.c: 56:     lcd_command(0x01);
   566     07B1  3001               	movlw	1
   567     07B2  120A  118A  2777  120A  118A  	fcall	_lcd_command
   568     07B7                     l25:
   569     07B7  0008               	return
   570     07B8                     __end_of_lcd_initialise:
   571                           
   572                           	psect	text4
   573     0777                     __ptext4:	
   574 ;; *************** function _lcd_command *****************
   575 ;; Defined at:
   576 ;;		line 37 in file "lcd16x2.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  cmd             1    wreg     unsigned char 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  cmd             1    2[COMMON] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         1       0       0       0       0
   592 ;;      Temps:          2       0       0       0       0
   593 ;;      Totals:         3       0       0       0       0
   594 ;;Total ram usage:        3 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_lcd_initialise
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     0777                     _lcd_command:	
   605                           ;psect for function _lcd_command
   606                           
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _lcd_command: [wreg]
   610                           ;lcd_command@cmd stored from wreg
   611     0777  00F3               	movwf	lcd_command@cmd
   612     0778                     l635:
   613                           
   614                           ;lcd16x2.c: 38:     PORTC = cmd;
   615     0778  0873               	movf	lcd_command@cmd,w
   616     0779  1283               	bcf	3,5	;RP0=0, select bank0
   617     077A  1303               	bcf	3,6	;RP1=0, select bank0
   618     077B  0087               	movwf	7	;volatile
   619     077C                     l637:
   620                           
   621                           ;lcd16x2.c: 39:     PORTDbits.RD0 = 0;
   622     077C  1008               	bcf	8,0	;volatile
   623     077D                     l639:
   624                           
   625                           ;lcd16x2.c: 40:     PORTDbits.RD1 = 0;
   626     077D  1088               	bcf	8,1	;volatile
   627     077E                     l641:
   628                           
   629                           ;lcd16x2.c: 41:     PORTDbits.RD2 = 1;
   630     077E  1508               	bsf	8,2	;volatile
   631                           
   632                           ;lcd16x2.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
   633     077F  3007               	movlw	7
   634     0780  00F2               	movwf	??_lcd_command+1
   635     0781  307D               	movlw	125
   636     0782  00F1               	movwf	??_lcd_command
   637     0783                     u47:
   638     0783  0BF1               	decfsz	??_lcd_command,f
   639     0784  2F83               	goto	u47
   640     0785  0BF2               	decfsz	??_lcd_command+1,f
   641     0786  2F83               	goto	u47
   642     0787                     l643:
   643                           
   644                           ;lcd16x2.c: 43:     PORTDbits.RD2 = 0;
   645     0787  1283               	bcf	3,5	;RP0=0, select bank0
   646     0788  1303               	bcf	3,6	;RP1=0, select bank0
   647     0789  1108               	bcf	8,2	;volatile
   648     078A                     l16:
   649     078A  0008               	return
   650     078B                     __end_of_lcd_command:
   651     007E                     btemp	set	126	;btemp
   652     007E                     wtemp0	set	126
   653                           
   654                           	psect	config
   655                           
   656                           ;Config register CONFIG @ 0x2007
   657                           ;	Oscillator Selection bits
   658                           ;	FOSC = HS, HS oscillator
   659                           ;	Watchdog Timer Enable bit
   660                           ;	WDTE = OFF, WDT disabled
   661                           ;	Power-up Timer Enable bit
   662                           ;	PWRTE = OFF, PWRT disabled
   663                           ;	Brown-out Reset Enable bit
   664                           ;	BOREN = OFF, BOR disabled
   665                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   666                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   667                           ;	Data EEPROM Memory Code Protection bit
   668                           ;	CPD = OFF, Data EEPROM code protection off
   669                           ;	Flash Program Memory Write Enable bits
   670                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   671                           ;	In-Circuit Debugger Mode bit
   672                           ;	DEBUG = 0x1, unprogrammed default
   673                           ;	Flash Program Memory Code Protection bit
   674                           ;	CP = OFF, Code protection off
   675     2007                     	org	8199
   676     2007  3FBA               	dw	16314

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     353
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     323
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      6       6       1       46.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 01 15:16:47 2023

                      pc 0002             lcd_data@data 0073                       l13 079E  
                     l22 07D2                       l16 078A                       l25 07B7  
                     u20 07D2                       u21 07D1                       u37 0797  
                     u47 0783                       fsr 0004                      l631 0792  
                    l641 077E                      l633 079B                      l625 078C  
                    l643 0787                      l635 0778                      l627 0790  
                    l637 077C                      l653 079F                      l629 0791  
                    l639 077D                      l671 07C8                      l673 07CC  
                    l681 07E2                      l667 07B9                      l683 07EA  
                    l675 07D3                      l669 07BB                      l685 07F0  
                    l677 07D7                      l679 07DC                      fsr0 0004  
                   STR_1 0015                     STR_2 000A                     _main 07D3  
                   btemp 007E                     start 0001              lcd_string@i 0076  
                  ?_main 0071                    _PORTC 0007                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0077           lcd_command@cmd 0073         __end_of_lcd_data 079F  
       ??_lcd_initialise 0074            lcd_string@num 0074            lcd_string@str 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0071               __pmaintext 07D3  
              ?_lcd_data 0071               _lcd_string 07B8               __stringtab 0004  
                __ptext1 07B8                  __ptext2 078B                  __ptext3 079F  
                __ptext4 0777               ??_lcd_data 0071     end_of_initialization 07FC  
              _PORTDbits 0008              ?_lcd_string 0074            ??_lcd_command 0071  
    start_initialization 07FC      __end_of_lcd_command 078B                ___latbits 0002  
              __pstrings 0004              _lcd_command 0777              __stringbase 0009  
           ??_lcd_string 0075       __end_of_lcd_string 07D3       __end_of__stringtab 000A  
               _lcd_data 078B           _lcd_initialise 079F   __end_of_lcd_initialise 07B8  
              stringcode 0004                 stringdir 0004                 stringtab 0004  
        ?_lcd_initialise 0071             ?_lcd_command 0071  
