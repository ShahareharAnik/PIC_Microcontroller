

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 21:54:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataCOMMON
   172     079C                     __pidataCOMMON:
   173                           
   174                           ;initializer for _number
   175     079C  344E               	retlw	78
   176                           
   177                           	psect	idataBANK0
   178     079D                     __pidataBANK0:
   179                           
   180                           ;initializer for _seg
   181     079D  343F               	retlw	63
   182     079E  3406               	retlw	6
   183     079F  345B               	retlw	91
   184     07A0  344F               	retlw	79
   185     07A1  3466               	retlw	102
   186     07A2  346D               	retlw	109
   187     07A3  347C               	retlw	124
   188     07A4  3407               	retlw	7
   189     07A5  347F               	retlw	127
   190     07A6  346F               	retlw	111
   191                           
   192                           	psect	nvCOMMON
   193     0073                     __pnvCOMMON:
   194     0073                     _j:
   195     0073                     	ds	1
   196     0074                     _i:
   197     0074                     	ds	1
   198     0006                     _PORTB	set	6
   199     0007                     _PORTCbits	set	7
   200     0087                     _TRISC	set	135
   201     0086                     _TRISB	set	134
   202                           
   203                           	psect	cinit
   204     07E8                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07E8                     __initialization:
   208                           
   209                           ; Initialize objects allocated to BANK0
   210     07E8  1383               	bcf	3,7	;select IRP bank0
   211     07E9  302A               	movlw	low (__pdataBANK0+10)
   212     07EA  00FD               	movwf	btemp+-1
   213     07EB  3007               	movlw	high __pidataBANK0
   214     07EC  00FE               	movwf	btemp
   215     07ED  309D               	movlw	low __pidataBANK0
   216     07EE  00FF               	movwf	btemp+1
   217     07EF  3020               	movlw	low __pdataBANK0
   218     07F0  0084               	movwf	4
   219     07F1  120A  118A  27AB  120A  118A  	fcall	init_ram0
   220                           
   221                           ; Initialize objects allocated to COMMON
   222     07F6  120A  118A  279C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   223     07FB  00F5               	movwf	__pdataCOMMON& (0+127)
   224     07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227     07FC                     __end_of__initialization:
   228     07FC  0183               	clrf	3
   229     07FD  120A  118A  2FBA   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	dataCOMMON
   232     0075                     __pdataCOMMON:
   233     0075                     _number:
   234     0075                     	ds	1
   235                           
   236                           	psect	dataBANK0
   237     0020                     __pdataBANK0:
   238     0020                     _seg:
   239     0020                     	ds	10
   240                           
   241                           	psect	inittext
   242     07A7                     init_fetch0:	
   243                           ;	Called with low address in FSR and high address in W
   244                           
   245     07A7  087E               	movf	btemp,w
   246     07A8  008A               	movwf	10
   247     07A9  087F               	movf	btemp+1,w
   248     07AA  0082               	movwf	2
   249     07AB                     init_ram0:	
   250                           ;Called with:
   251                           ;	high address of idata address in btemp 
   252                           ;	low address of idata address in btemp+1 
   253                           ;	low address of data in FSR
   254                           ;	high address + 1 of data in btemp-1
   255                           
   256     07AB  120A  118A  27A7  120A  118A  	fcall	init_fetch0
   257     07B0  0080               	movwf	0
   258     07B1  0A84               	incf	4,f
   259     07B2  0804               	movf	4,w
   260     07B3  067D               	xorwf	btemp+-1,w
   261     07B4  1903               	btfsc	3,2
   262     07B5  3400               	retlw	0
   263     07B6  0AFF               	incf	btemp+1,f
   264     07B7  1903               	btfsc	3,2
   265     07B8  0AFE               	incf	btemp,f
   266     07B9  2FAB               	goto	init_ram0
   267                           
   268                           	psect	cstackCOMMON
   269     0070                     __pcstackCOMMON:
   270     0070                     ?_main:
   271     0070                     ??_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274                           
   275                           ; 1 bytes @ 0x0
   276     0070                     	ds	3
   277                           
   278                           	psect	maintext
   279     07BA                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 25 in file "7signalDisplays.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          3       0       0       0       0
   302 ;;      Totals:         3       0       0       0       0
   303 ;;Total ram usage:        3 bytes
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311     07BA                     _main:	
   312                           ;psect for function _main
   313                           
   314     07BA                     l722:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2]
   317                           
   318                           
   319                           ;7signalDisplays.c: 26: TRISB = 0X00;
   320     07BA  1683               	bsf	3,5	;RP0=1, select bank1
   321     07BB  1303               	bcf	3,6	;RP1=0, select bank1
   322     07BC  0186               	clrf	6	;volatile
   323                           
   324                           ;7signalDisplays.c: 27: TRISC = 0X00;
   325     07BD  0187               	clrf	7	;volatile
   326     07BE                     l724:
   327                           
   328                           ;7signalDisplays.c: 29: i = number/10;
   329     07BE  3007               	movlw	7
   330     07BF  00F4               	movwf	_i
   331     07C0                     l726:
   332                           
   333                           ;7signalDisplays.c: 30: j = number%10;
   334     07C0  3008               	movlw	8
   335     07C1  00F3               	movwf	_j
   336     07C2                     l728:
   337                           
   338                           ;7signalDisplays.c: 31: PORTCbits.RC0 = 1; PORTCbits.RC1=0;
   339     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   340     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   341     07C4  1407               	bsf	7,0	;volatile
   342     07C5                     l730:
   343     07C5  1087               	bcf	7,1	;volatile
   344     07C6                     l732:
   345                           
   346                           ;7signalDisplays.c: 32: PORTB = seg[i];
   347     07C6  0827               	movf	_seg+7,w
   348     07C7  0086               	movwf	6	;volatile
   349     07C8                     l734:
   350                           
   351                           ;7signalDisplays.c: 33: _delay((unsigned long)((10)*(4000000/4000.0)));
   352     07C8  300D               	movlw	13
   353     07C9  00F1               	movwf	??_main+1
   354     07CA  30FB               	movlw	251
   355     07CB  00F0               	movwf	??_main
   356     07CC                     u397:
   357     07CC  0BF0               	decfsz	??_main,f
   358     07CD  2FCC               	goto	u397
   359     07CE  0BF1               	decfsz	??_main+1,f
   360     07CF  2FCC               	goto	u397
   361     07D0  2FD1               	nop2
   362     07D1                     l736:
   363                           
   364                           ;7signalDisplays.c: 34: PORTCbits.RC1 = 1; PORTCbits.RC0=0;
   365     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   366     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   367     07D3  1487               	bsf	7,1	;volatile
   368     07D4                     l738:
   369     07D4  1007               	bcf	7,0	;volatile
   370     07D5                     l740:
   371                           
   372                           ;7signalDisplays.c: 35: PORTB = seg[j];
   373     07D5  0828               	movf	_seg+8,w
   374     07D6  0086               	movwf	6	;volatile
   375     07D7                     l742:
   376                           
   377                           ;7signalDisplays.c: 36: _delay((unsigned long)((1000)*(4000000/4000.0)));
   378     07D7  3006               	movlw	6
   379     07D8  00F2               	movwf	??_main+2
   380     07D9  3013               	movlw	19
   381     07DA  00F1               	movwf	??_main+1
   382     07DB  30AD               	movlw	173
   383     07DC  00F0               	movwf	??_main
   384     07DD                     u407:
   385     07DD  0BF0               	decfsz	??_main,f
   386     07DE  2FDD               	goto	u407
   387     07DF  0BF1               	decfsz	??_main+1,f
   388     07E0  2FDD               	goto	u407
   389     07E1  0BF2               	decfsz	??_main+2,f
   390     07E2  2FDD               	goto	u407
   391     07E3  2FE4               	nop2
   392     07E4  2FBE               	goto	l724
   393     07E5  120A  118A  2800   	ljmp	start
   394     07E8                     __end_of_main:
   395     007E                     btemp	set	126	;btemp
   396     007E                     wtemp0	set	126
   397                           
   398                           	psect	config
   399                           
   400                           ;Config register CONFIG @ 0x2007
   401                           ;	Oscillator Selection bits
   402                           ;	FOSC = HS, HS oscillator
   403                           ;	Watchdog Timer Enable bit
   404                           ;	WDTE = OFF, WDT disabled
   405                           ;	Power-up Timer Enable bit
   406                           ;	PWRTE = OFF, PWRT disabled
   407                           ;	Brown-out Reset Enable bit
   408                           ;	BOREN = OFF, BOR disabled
   409                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   410                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   411                           ;	Data EEPROM Memory Code Protection bit
   412                           ;	CPD = OFF, Data EEPROM code protection off
   413                           ;	Flash Program Memory Write Enable bits
   414                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   415                           ;	In-Circuit Debugger Mode bit
   416                           ;	DEBUG = 0x1, unprogrammed default
   417                           ;	Flash Program Memory Code Protection bit
   418                           ;	CP = OFF, Code protection off
   419     2007                     	org	8199
   420     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 21:54:52 2023

                      _i 0074                        _j 0073                        pc 0002  
                     fsr 0004                      l730 07C5                      l722 07BA  
                    l740 07D5                      l732 07C6                      l724 07BE  
                    l742 07D7                      l734 07C8                      l726 07C0  
                    l736 07D1                      l728 07C2                      l738 07D4  
                    u407 07DD                      u397 07CC                      _seg 0020  
                    indf 0000                     _main 07BA                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E8  
           __end_of_main 07E8                   ??_main 0070                   _number 0075  
           __pdataCOMMON 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 079D               __pnvCOMMON 0073               __pmaintext 07BA  
   end_of_initialization 07FC                _PORTCbits 0007            __pidataCOMMON 079C  
    start_initialization 07E8               init_fetch0 07A7              __pdataBANK0 0020  
              ___latbits 0002                 init_ram0 07AB  
