

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 03:32:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0006                     _PORTBbits	set	6
   168     0001                     _TMR0	set	1
   169     000B                     _INTCONbits	set	11
   170     0081                     _OPTION_REG	set	129
   171     0430                     _TRISB0	set	1072
   172                           
   173                           	psect	cinit
   174     0011                     start_initialization:	
   175                           ; #config settings
   176                           
   177     0011                     __initialization:
   178                           
   179                           ; Clear objects allocated to COMMON
   180     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   181     0012                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     0012                     __end_of__initialization:
   185     0012  0183               	clrf	3
   186     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMMON
   189     0073                     __pbssCOMMON:
   190     0073                     _timer_count:
   191     0073                     	ds	1
   192                           
   193                           	psect	cstackCOMMON
   194     0070                     __pcstackCOMMON:
   195     0070                     ?_timer_0:
   196     0070                     ??_timer_0:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           ; 1 bytes @ 0x0
   204     0070                     	ds	3
   205     0073                     ??_main:
   206                           
   207                           	psect	maintext
   208     0016                     __pmaintext:	
   209                           ; 1 bytes @ 0x3
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 32 in file "Timer.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     0016                     _main:	
   243                           ;psect for function _main
   244                           
   245     0016                     l627:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg+status,2+status,0]
   248                           
   249                           
   250                           ;Timer.c: 33: INTCONbits.GIE = 1;
   251     0016  178B               	bsf	11,7	;volatile
   252                           
   253                           ;Timer.c: 34: INTCONbits.PEIE = 1;
   254     0017  170B               	bsf	11,6	;volatile
   255                           
   256                           ;Timer.c: 35: INTCONbits.TMR0IE = 1;
   257     0018  168B               	bsf	11,5	;volatile
   258     0019                     l629:
   259                           
   260                           ;Timer.c: 37: OPTION_REG = 0X07;
   261     0019  3007               	movlw	7
   262     001A  1683               	bsf	3,5	;RP0=1, select bank1
   263     001B  1303               	bcf	3,6	;RP1=0, select bank1
   264     001C  0081               	movwf	1	;volatile
   265                           
   266                           ;Timer.c: 38: TMR0 = 59;
   267     001D  303B               	movlw	59
   268     001E  1283               	bcf	3,5	;RP0=0, select bank0
   269     001F  1303               	bcf	3,6	;RP1=0, select bank0
   270     0020  0081               	movwf	1	;volatile
   271     0021                     l631:
   272                           
   273                           ;Timer.c: 39: TRISB0 = 0;
   274     0021  1683               	bsf	3,5	;RP0=1, select bank1
   275     0022  1303               	bcf	3,6	;RP1=0, select bank1
   276     0023  1006               	bcf	6,0	;volatile
   277     0024                     l633:
   278                           
   279                           ;Timer.c: 41: if(timer_count==0){
   280     0024  0873               	movf	_timer_count,w
   281     0025  1D03               	btfss	3,2
   282     0026  2828               	goto	u21
   283     0027  2829               	goto	u20
   284     0028                     u21:
   285     0028  282C               	goto	l637
   286     0029                     u20:
   287     0029                     l635:
   288                           
   289                           ;Timer.c: 42: PORTBbits.RB0 = 1;
   290     0029  1283               	bcf	3,5	;RP0=0, select bank0
   291     002A  1303               	bcf	3,6	;RP1=0, select bank0
   292     002B  1406               	bsf	6,0	;volatile
   293     002C                     l637:
   294                           
   295                           ;Timer.c: 43: };Timer.c: 44: if(timer_count == 100){
   296     002C  3064               	movlw	100
   297     002D  0673               	xorwf	_timer_count,w
   298     002E  1D03               	btfss	3,2
   299     002F  2831               	goto	u31
   300     0030  2832               	goto	u30
   301     0031                     u31:
   302     0031  2835               	goto	l641
   303     0032                     u30:
   304     0032                     l639:
   305                           
   306                           ;Timer.c: 45: PORTBbits.RB0 = 0;
   307     0032  1283               	bcf	3,5	;RP0=0, select bank0
   308     0033  1303               	bcf	3,6	;RP1=0, select bank0
   309     0034  1006               	bcf	6,0	;volatile
   310     0035                     l641:
   311                           
   312                           ;Timer.c: 46: };Timer.c: 47: if(timer_count == 200){
   313     0035  30C8               	movlw	200
   314     0036  0673               	xorwf	_timer_count,w
   315     0037  1D03               	btfss	3,2
   316     0038  283A               	goto	u41
   317     0039  283B               	goto	u40
   318     003A                     u41:
   319     003A  2824               	goto	l633
   320     003B                     u40:
   321     003B                     l643:
   322                           
   323                           ;Timer.c: 48: timer_count = 0;
   324     003B  01F3               	clrf	_timer_count
   325     003C  2824               	goto	l633
   326     003D  120A  118A  280E   	ljmp	start
   327     0040                     __end_of_main:
   328                           
   329                           	psect	text1
   330     0040                     __ptext1:	
   331 ;; *************** function _timer_0 *****************
   332 ;; Defined at:
   333 ;;		line 24 in file "Timer.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, btemp+1
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0
   349 ;;      Temps:          3       0       0       0       0
   350 ;;      Totals:         3       0       0       0       0
   351 ;;Total ram usage:        3 bytes
   352 ;; Hardware stack levels used: 1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		Interrupt level 1
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360     0040                     _timer_0:	
   361                           ;psect for function _timer_0
   362                           
   363     0040                     i1l621:
   364                           
   365                           ;Timer.c: 26: if(INTCONbits.TMR0IF == 1)
   366     0040  1D0B               	btfss	11,2	;volatile
   367     0041  2843               	goto	u1_21
   368     0042  2844               	goto	u1_20
   369     0043                     u1_21:
   370     0043  2849               	goto	i1l18
   371     0044                     u1_20:
   372     0044                     i1l623:
   373                           
   374                           ;Timer.c: 27: {;Timer.c: 28: timer_count++ ;
   375     0044  3001               	movlw	1
   376     0045  00FF               	movwf	btemp+1
   377     0046  087F               	movf	btemp+1,w
   378     0047  07F3               	addwf	_timer_count,f
   379     0048                     i1l625:
   380                           
   381                           ;Timer.c: 29: INTCONbits.TMR0IF = 0;
   382     0048  110B               	bcf	11,2	;volatile
   383     0049                     i1l18:
   384     0049  0872               	movf	??_timer_0+2,w
   385     004A  00FF               	movwf	btemp+1
   386     004B  0871               	movf	??_timer_0+1,w
   387     004C  008A               	movwf	10
   388     004D  0E70               	swapf	??_timer_0,w
   389     004E  0083               	movwf	3
   390     004F  0EFE               	swapf	btemp,f
   391     0050  0E7E               	swapf	btemp,w
   392     0051  0009               	retfie
   393     0052                     __end_of_timer_0:
   394     007E                     btemp	set	126	;btemp
   395     007E                     wtemp0	set	126
   396                           
   397                           	psect	intentry
   398     0004                     __pintentry:	
   399                           ;incstack = 0
   400                           ; Regs used in _timer_0: [wreg+status,2+status,0+btemp+1]
   401                           
   402     0004                     interrupt_function:
   403     007E                     saved_w	set	btemp
   404     0004  00FE               	movwf	btemp
   405     0005  0E03               	swapf	3,w
   406     0006  00F0               	movwf	??_timer_0
   407     0007  080A               	movf	10,w
   408     0008  00F1               	movwf	??_timer_0+1
   409     0009  087F               	movf	btemp+1,w
   410     000A  00F2               	movwf	??_timer_0+2
   411     000B  120A  118A  2840   	ljmp	_timer_0
   412                           
   413                           	psect	config
   414                           
   415                           ;Config register CONFIG @ 0x2007
   416                           ;	Oscillator Selection bits
   417                           ;	FOSC = HS, HS oscillator
   418                           ;	Watchdog Timer Enable bit
   419                           ;	WDTE = OFF, WDT disabled
   420                           ;	Power-up Timer Enable bit
   421                           ;	PWRTE = OFF, PWRT disabled
   422                           ;	Brown-out Reset Enable bit
   423                           ;	BOREN = OFF, BOR disabled
   424                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   425                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   426                           ;	Data EEPROM Memory Code Protection bit
   427                           ;	CPD = OFF, Data EEPROM code protection off
   428                           ;	Flash Program Memory Write Enable bits
   429                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   430                           ;	In-Circuit Debugger Mode bit
   431                           ;	DEBUG = 0x1, unprogrammed default
   432                           ;	Flash Program Memory Code Protection bit
   433                           ;	CP = OFF, Code protection off
   434     2007                     	org	8199
   435     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer_0                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 03:32:12 2023

                     u20 0029                       u21 0028                       u30 0032  
                     u31 0031                       u40 003B                       u41 003A  
                    l631 0021                      l641 0035                      l633 0024  
                    l643 003B                      l635 0029                      l627 0016  
                    l637 002C                      l629 0019                      l639 0032  
                   i1l18 0049                     _TMR0 0001                     u1_20 0044  
                   u1_21 0043                     _main 0016                     btemp 007E  
                   start 000E                    ?_main 0070                    i1l621 0040  
                  i1l623 0044                    i1l625 0048                    pclath 000A  
        __end_of_timer_0 0052                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0040                   ??_main 0073  
                 _TRISB0 0430                   saved_w 007E                ??_timer_0 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070               __pmaintext 0016  
             __pintentry 0004                  __ptext1 0040                  _timer_0 0040  
   end_of_initialization 0012                _PORTBbits 0006      start_initialization 0011  
            __pbssCOMMON 0073                ___latbits 0002                 ?_timer_0 0070  
      interrupt_function 0004               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081              _timer_count 0073  
