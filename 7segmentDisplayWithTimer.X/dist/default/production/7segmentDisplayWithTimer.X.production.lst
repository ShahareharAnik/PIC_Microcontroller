

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 23:48:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176     018F                     __pidataBANK0:
   177                           
   178                           ;initializer for _seg
   179     018F  343F               	retlw	63
   180     0190  3406               	retlw	6
   181     0191  345B               	retlw	91
   182     0192  344F               	retlw	79
   183     0193  3466               	retlw	102
   184     0194  346D               	retlw	109
   185     0195  347D               	retlw	125
   186     0196  3407               	retlw	7
   187     0197  347F               	retlw	127
   188     0198  346F               	retlw	111
   189                           
   190                           	psect	nvCOMMON
   191     0076                     __pnvCOMMON:
   192     0076                     _j:
   193     0076                     	ds	1
   194     0077                     _i:
   195     0077                     	ds	1
   196     0001                     _TMR0	set	1
   197     0006                     _PORTB	set	6
   198     0007                     _PORTCbits	set	7
   199     000B                     _INTCONbits	set	11
   200     0086                     _TRISB	set	134
   201     0081                     _OPTION_REG	set	129
   202     0439                     _TRISC1	set	1081
   203     0438                     _TRISC0	set	1080
   204                           
   205                           	psect	cinit
   206     0013                     start_initialization:	
   207                           ; #config settings
   208                           
   209     0013                     __initialization:
   210                           
   211                           ; Initialize objects allocated to BANK0
   212     0013  1383               	bcf	3,7	;select IRP bank0
   213     0014  3035               	movlw	low (__pdataBANK0+10)
   214     0015  00FD               	movwf	btemp+-1
   215     0016  3001               	movlw	high __pidataBANK0
   216     0017  00FE               	movwf	btemp
   217     0018  308F               	movlw	low __pidataBANK0
   218     0019  00FF               	movwf	btemp+1
   219     001A  302B               	movlw	low __pdataBANK0
   220     001B  0084               	movwf	4
   221     001C  120A  118A  2180  120A  118A  	fcall	init_ram0
   222                           
   223                           ; Clear objects allocated to COMMON
   224     0021  01F8               	clrf	__pbssCOMMON& (0+127)
   225     0022  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   226     0023                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229     0023                     __end_of__initialization:
   230     0023  0183               	clrf	3
   231     0024  120A  118A  28EB   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234     0078                     __pbssCOMMON:
   235     0078                     _number:
   236     0078                     	ds	1
   237     0079                     _timer_count:
   238     0079                     	ds	1
   239                           
   240                           	psect	dataBANK0
   241     002B                     __pdataBANK0:
   242     002B                     _seg:
   243     002B                     	ds	10
   244                           
   245                           	psect	inittext
   246     017C                     init_fetch0:	
   247                           ;	Called with low address in FSR and high address in W
   248                           
   249     017C  087E               	movf	btemp,w
   250     017D  008A               	movwf	10
   251     017E  087F               	movf	btemp+1,w
   252     017F  0082               	movwf	2
   253     0180                     init_ram0:	
   254                           ;Called with:
   255                           ;	high address of idata address in btemp 
   256                           ;	low address of idata address in btemp+1 
   257                           ;	low address of data in FSR
   258                           ;	high address + 1 of data in btemp-1
   259                           
   260     0180  120A  118A  217C  120A  118A  	fcall	init_fetch0
   261     0185  0080               	movwf	0
   262     0186  0A84               	incf	4,f
   263     0187  0804               	movf	4,w
   264     0188  067D               	xorwf	btemp+-1,w
   265     0189  1903               	btfsc	3,2
   266     018A  3400               	retlw	0
   267     018B  0AFF               	incf	btemp+1,f
   268     018C  1903               	btfsc	3,2
   269     018D  0AFE               	incf	btemp,f
   270     018E  2980               	goto	init_ram0
   271                           
   272                           	psect	cstackCOMMON
   273     0070                     __pcstackCOMMON:
   274     0070                     ?_timer_0:
   275     0070                     ??_timer_0:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283     0070                     	ds	4
   284     0074                     ??___awdiv:
   285     0074                     ??___awmod:	
   286                           ; 1 bytes @ 0x4
   287                           
   288     0074                     ___awmod@counter:	
   289                           ; 1 bytes @ 0x4
   290                           
   291                           
   292                           ; 1 bytes @ 0x4
   293     0074                     	ds	1
   294     0075                     ___awmod@sign:
   295                           
   296                           ; 1 bytes @ 0x5
   297     0075                     	ds	1
   298                           
   299                           	psect	cstackBANK0
   300     0020                     __pcstackBANK0:
   301     0020                     ?___awdiv:
   302     0020                     ?___awmod:	
   303                           ; 2 bytes @ 0x0
   304                           
   305     0020                     ___awdiv@divisor:	
   306                           ; 2 bytes @ 0x0
   307                           
   308     0020                     ___awmod@divisor:	
   309                           ; 2 bytes @ 0x0
   310                           
   311                           
   312                           ; 2 bytes @ 0x0
   313     0020                     	ds	2
   314     0022                     ___awdiv@dividend:
   315     0022                     ___awmod@dividend:	
   316                           ; 2 bytes @ 0x2
   317                           
   318                           
   319                           ; 2 bytes @ 0x2
   320     0022                     	ds	2
   321     0024                     ___awdiv@counter:
   322                           
   323                           ; 1 bytes @ 0x4
   324     0024                     	ds	1
   325     0025                     ___awdiv@sign:
   326                           
   327                           ; 1 bytes @ 0x5
   328     0025                     	ds	1
   329     0026                     ___awdiv@quotient:
   330                           
   331                           ; 2 bytes @ 0x6
   332     0026                     	ds	2
   333     0028                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x8
   336     0028                     	ds	3
   337                           
   338                           	psect	maintext
   339     00EB                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 47 in file "7segmentDisplayWithTimer.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       3       0       0       0
   362 ;;      Totals:         0       3       0       0       0
   363 ;;Total ram usage:        3 bytes
   364 ;; Hardware stack levels required when called: 2
   365 ;; This function calls:
   366 ;;		___awdiv
   367 ;;		___awmod
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373     00EB                     _main:	
   374                           ;psect for function _main
   375                           
   376     00EB                     l972:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   379                           
   380                           
   381                           ;7segmentDisplayWithTimer.c: 48: INTCONbits.GIE = 1;
   382     00EB  178B               	bsf	11,7	;volatile
   383                           
   384                           ;7segmentDisplayWithTimer.c: 49: INTCONbits.PEIE = 1;
   385     00EC  170B               	bsf	11,6	;volatile
   386                           
   387                           ;7segmentDisplayWithTimer.c: 50: INTCONbits.TMR0IE = 1;
   388     00ED  168B               	bsf	11,5	;volatile
   389     00EE                     l974:
   390                           
   391                           ;7segmentDisplayWithTimer.c: 52: OPTION_REG = 0X07;
   392     00EE  3007               	movlw	7
   393     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   394     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   395     00F1  0081               	movwf	1	;volatile
   396                           
   397                           ;7segmentDisplayWithTimer.c: 53: TMR0 = 59;
   398     00F2  303B               	movlw	59
   399     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   400     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   401     00F5  0081               	movwf	1	;volatile
   402     00F6                     l976:
   403                           
   404                           ;7segmentDisplayWithTimer.c: 54: TRISB = 0X00;
   405     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   406     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   407     00F8  0186               	clrf	6	;volatile
   408     00F9                     l978:
   409                           
   410                           ;7segmentDisplayWithTimer.c: 55: TRISC0 = 0;
   411     00F9  1007               	bcf	7,0	;volatile
   412     00FA                     l980:
   413                           
   414                           ;7segmentDisplayWithTimer.c: 56: TRISC1 = 0;
   415     00FA  1087               	bcf	7,1	;volatile
   416     00FB                     l982:
   417                           
   418                           ;7segmentDisplayWithTimer.c: 58: i = number / 10;
   419     00FB  300A               	movlw	10
   420     00FC  1283               	bcf	3,5	;RP0=0, select bank0
   421     00FD  1303               	bcf	3,6	;RP1=0, select bank0
   422     00FE  00A0               	movwf	___awdiv@divisor
   423     00FF  3000               	movlw	0
   424     0100  00A1               	movwf	___awdiv@divisor+1
   425     0101  0878               	movf	_number,w
   426     0102  00A8               	movwf	??_main
   427     0103  01A9               	clrf	??_main+1
   428     0104  0828               	movf	??_main,w
   429     0105  00A2               	movwf	___awdiv@dividend
   430     0106  0829               	movf	??_main+1,w
   431     0107  00A3               	movwf	___awdiv@dividend+1
   432     0108  120A  118A  2027  120A  118A  	fcall	___awdiv
   433     010D  1283               	bcf	3,5	;RP0=0, select bank0
   434     010E  1303               	bcf	3,6	;RP1=0, select bank0
   435     010F  0820               	movf	?___awdiv,w
   436     0110  00F7               	movwf	_i
   437     0111                     l984:
   438                           
   439                           ;7segmentDisplayWithTimer.c: 59: j = number%10;
   440     0111  300A               	movlw	10
   441     0112  00A0               	movwf	___awmod@divisor
   442     0113  3000               	movlw	0
   443     0114  00A1               	movwf	___awmod@divisor+1
   444     0115  0878               	movf	_number,w
   445     0116  00A8               	movwf	??_main
   446     0117  01A9               	clrf	??_main+1
   447     0118  0828               	movf	??_main,w
   448     0119  00A2               	movwf	___awmod@dividend
   449     011A  0829               	movf	??_main+1,w
   450     011B  00A3               	movwf	___awmod@dividend+1
   451     011C  120A  118A  2090  120A  118A  	fcall	___awmod
   452     0121  1283               	bcf	3,5	;RP0=0, select bank0
   453     0122  1303               	bcf	3,6	;RP1=0, select bank0
   454     0123  0820               	movf	?___awmod,w
   455     0124  00F6               	movwf	_j
   456     0125                     l986:
   457                           
   458                           ;7segmentDisplayWithTimer.c: 60: number++;
   459     0125  3001               	movlw	1
   460     0126  00FF               	movwf	btemp+1
   461     0127  087F               	movf	btemp+1,w
   462     0128  07F8               	addwf	_number,f
   463     0129                     l988:
   464                           
   465                           ;7segmentDisplayWithTimer.c: 61: if(number == 100){
   466     0129  3064               	movlw	100
   467     012A  0678               	xorwf	_number,w
   468     012B  1D03               	btfss	3,2
   469     012C  292E               	goto	u681
   470     012D  292F               	goto	u680
   471     012E                     u681:
   472     012E  2930               	goto	l992
   473     012F                     u680:
   474     012F                     l990:
   475                           
   476                           ;7segmentDisplayWithTimer.c: 62: number = 0;
   477     012F  01F8               	clrf	_number
   478     0130                     l992:
   479                           
   480                           ;7segmentDisplayWithTimer.c: 63: };7segmentDisplayWithTimer.c: 64: _delay((unsigned long
      +                          )((1000)*(20000000/4000.0)));
   481     0130  301A               	movlw	26
   482     0131  1283               	bcf	3,5	;RP0=0, select bank0
   483     0132  1303               	bcf	3,6	;RP1=0, select bank0
   484     0133  00AA               	movwf	??_main+2
   485     0134  305E               	movlw	94
   486     0135  00A9               	movwf	??_main+1
   487     0136  306D               	movlw	109
   488     0137  00A8               	movwf	??_main
   489     0138                     u697:
   490     0138  0BA8               	decfsz	??_main,f
   491     0139  2938               	goto	u697
   492     013A  0BA9               	decfsz	??_main+1,f
   493     013B  2938               	goto	u697
   494     013C  0BAA               	decfsz	??_main+2,f
   495     013D  2938               	goto	u697
   496     013E  293F               	nop2
   497     013F  28FB               	goto	l982
   498     0140  120A  118A  2810   	ljmp	start
   499     0143                     __end_of_main:
   500                           
   501                           	psect	text1
   502     0090                     __ptext1:	
   503 ;; *************** function ___awmod *****************
   504 ;; Defined at:
   505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  divisor         2    0[BANK0 ] int 
   508 ;;  dividend        2    2[BANK0 ] int 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  sign            1    5[COMMON] unsigned char 
   511 ;;  counter         1    4[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  2    0[BANK0 ] int 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, btemp+1
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       4       0       0       0
   522 ;;      Locals:         2       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         2       4       0       0       0
   525 ;;Total ram usage:        6 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535     0090                     ___awmod:	
   536                           ;psect for function ___awmod
   537                           
   538     0090                     l934:	
   539                           ;incstack = 0
   540                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   541                           
   542     0090  01F5               	clrf	___awmod@sign
   543     0091                     l936:
   544     0091  1283               	bcf	3,5	;RP0=0, select bank0
   545     0092  1303               	bcf	3,6	;RP1=0, select bank0
   546     0093  1FA3               	btfss	___awmod@dividend+1,7
   547     0094  2896               	goto	u591
   548     0095  2897               	goto	u590
   549     0096                     u591:
   550     0096  289E               	goto	l942
   551     0097                     u590:
   552     0097                     l938:
   553     0097  09A2               	comf	___awmod@dividend,f
   554     0098  09A3               	comf	___awmod@dividend+1,f
   555     0099  0AA2               	incf	___awmod@dividend,f
   556     009A  1903               	skipnz
   557     009B  0AA3               	incf	___awmod@dividend+1,f
   558     009C                     l940:
   559     009C  01F5               	clrf	___awmod@sign
   560     009D  0AF5               	incf	___awmod@sign,f
   561     009E                     l942:
   562     009E  1FA1               	btfss	___awmod@divisor+1,7
   563     009F  28A1               	goto	u601
   564     00A0  28A2               	goto	u600
   565     00A1                     u601:
   566     00A1  28A7               	goto	l946
   567     00A2                     u600:
   568     00A2                     l944:
   569     00A2  09A0               	comf	___awmod@divisor,f
   570     00A3  09A1               	comf	___awmod@divisor+1,f
   571     00A4  0AA0               	incf	___awmod@divisor,f
   572     00A5  1903               	skipnz
   573     00A6  0AA1               	incf	___awmod@divisor+1,f
   574     00A7                     l946:
   575     00A7  0820               	movf	___awmod@divisor,w
   576     00A8  0421               	iorwf	___awmod@divisor+1,w
   577     00A9  1903               	btfsc	3,2
   578     00AA  28AC               	goto	u611
   579     00AB  28AD               	goto	u610
   580     00AC                     u611:
   581     00AC  28DC               	goto	l964
   582     00AD                     u610:
   583     00AD                     l948:
   584     00AD  01F4               	clrf	___awmod@counter
   585     00AE  0AF4               	incf	___awmod@counter,f
   586     00AF  28BB               	goto	l954
   587     00B0                     l950:
   588     00B0  3001               	movlw	1
   589     00B1                     u625:
   590     00B1  1003               	clrc
   591     00B2  0DA0               	rlf	___awmod@divisor,f
   592     00B3  0DA1               	rlf	___awmod@divisor+1,f
   593     00B4  3EFF               	addlw	-1
   594     00B5  1D03               	skipz
   595     00B6  28B1               	goto	u625
   596     00B7                     l952:
   597     00B7  3001               	movlw	1
   598     00B8  00FF               	movwf	btemp+1
   599     00B9  087F               	movf	btemp+1,w
   600     00BA  07F4               	addwf	___awmod@counter,f
   601     00BB                     l954:
   602     00BB  1FA1               	btfss	___awmod@divisor+1,7
   603     00BC  28BE               	goto	u631
   604     00BD  28BF               	goto	u630
   605     00BE                     u631:
   606     00BE  28B0               	goto	l950
   607     00BF                     u630:
   608     00BF                     l956:
   609     00BF  0821               	movf	___awmod@divisor+1,w
   610     00C0  0223               	subwf	___awmod@dividend+1,w
   611     00C1  1D03               	skipz
   612     00C2  28C5               	goto	u645
   613     00C3  0820               	movf	___awmod@divisor,w
   614     00C4  0222               	subwf	___awmod@dividend,w
   615     00C5                     u645:
   616     00C5  1C03               	skipc
   617     00C6  28C8               	goto	u641
   618     00C7  28C9               	goto	u640
   619     00C8                     u641:
   620     00C8  28CF               	goto	l960
   621     00C9                     u640:
   622     00C9                     l958:
   623     00C9  0820               	movf	___awmod@divisor,w
   624     00CA  02A2               	subwf	___awmod@dividend,f
   625     00CB  0821               	movf	___awmod@divisor+1,w
   626     00CC  1C03               	skipc
   627     00CD  03A3               	decf	___awmod@dividend+1,f
   628     00CE  02A3               	subwf	___awmod@dividend+1,f
   629     00CF                     l960:
   630     00CF  3001               	movlw	1
   631     00D0                     u655:
   632     00D0  1003               	clrc
   633     00D1  0CA1               	rrf	___awmod@divisor+1,f
   634     00D2  0CA0               	rrf	___awmod@divisor,f
   635     00D3  3EFF               	addlw	-1
   636     00D4  1D03               	skipz
   637     00D5  28D0               	goto	u655
   638     00D6                     l962:
   639     00D6  3001               	movlw	1
   640     00D7  02F4               	subwf	___awmod@counter,f
   641     00D8  1D03               	btfss	3,2
   642     00D9  28DB               	goto	u661
   643     00DA  28DC               	goto	u660
   644     00DB                     u661:
   645     00DB  28BF               	goto	l956
   646     00DC                     u660:
   647     00DC                     l964:
   648     00DC  0875               	movf	___awmod@sign,w
   649     00DD  1903               	btfsc	3,2
   650     00DE  28E0               	goto	u671
   651     00DF  28E1               	goto	u670
   652     00E0                     u671:
   653     00E0  28E6               	goto	l968
   654     00E1                     u670:
   655     00E1                     l966:
   656     00E1  09A2               	comf	___awmod@dividend,f
   657     00E2  09A3               	comf	___awmod@dividend+1,f
   658     00E3  0AA2               	incf	___awmod@dividend,f
   659     00E4  1903               	skipnz
   660     00E5  0AA3               	incf	___awmod@dividend+1,f
   661     00E6                     l968:
   662     00E6  0823               	movf	___awmod@dividend+1,w
   663     00E7  00A1               	movwf	?___awmod+1
   664     00E8  0822               	movf	___awmod@dividend,w
   665     00E9  00A0               	movwf	?___awmod
   666     00EA                     l298:
   667     00EA  0008               	return
   668     00EB                     __end_of___awmod:
   669                           
   670                           	psect	text2
   671     0027                     __ptext2:	
   672 ;; *************** function ___awdiv *****************
   673 ;; Defined at:
   674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  divisor         2    0[BANK0 ] int 
   677 ;;  dividend        2    2[BANK0 ] int 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  quotient        2    6[BANK0 ] int 
   680 ;;  sign            1    5[BANK0 ] unsigned char 
   681 ;;  counter         1    4[BANK0 ] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  2    0[BANK0 ] int 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, btemp+1
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       4       0       0       0
   692 ;;      Locals:         0       4       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         0       8       0       0       0
   695 ;;Total ram usage:        8 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     0027                     ___awdiv:	
   706                           ;psect for function ___awdiv
   707                           
   708     0027                     l890:	
   709                           ;incstack = 0
   710                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   711                           
   712     0027  1283               	bcf	3,5	;RP0=0, select bank0
   713     0028  1303               	bcf	3,6	;RP1=0, select bank0
   714     0029  01A5               	clrf	___awdiv@sign
   715     002A                     l892:
   716     002A  1FA1               	btfss	___awdiv@divisor+1,7
   717     002B  282D               	goto	u491
   718     002C  282E               	goto	u490
   719     002D                     u491:
   720     002D  2835               	goto	l898
   721     002E                     u490:
   722     002E                     l894:
   723     002E  09A0               	comf	___awdiv@divisor,f
   724     002F  09A1               	comf	___awdiv@divisor+1,f
   725     0030  0AA0               	incf	___awdiv@divisor,f
   726     0031  1903               	skipnz
   727     0032  0AA1               	incf	___awdiv@divisor+1,f
   728     0033                     l896:
   729     0033  01A5               	clrf	___awdiv@sign
   730     0034  0AA5               	incf	___awdiv@sign,f
   731     0035                     l898:
   732     0035  1FA3               	btfss	___awdiv@dividend+1,7
   733     0036  2838               	goto	u501
   734     0037  2839               	goto	u500
   735     0038                     u501:
   736     0038  2842               	goto	l904
   737     0039                     u500:
   738     0039                     l900:
   739     0039  09A2               	comf	___awdiv@dividend,f
   740     003A  09A3               	comf	___awdiv@dividend+1,f
   741     003B  0AA2               	incf	___awdiv@dividend,f
   742     003C  1903               	skipnz
   743     003D  0AA3               	incf	___awdiv@dividend+1,f
   744     003E                     l902:
   745     003E  3001               	movlw	1
   746     003F  00FF               	movwf	btemp+1
   747     0040  087F               	movf	btemp+1,w
   748     0041  06A5               	xorwf	___awdiv@sign,f
   749     0042                     l904:
   750     0042  01A6               	clrf	___awdiv@quotient
   751     0043  01A7               	clrf	___awdiv@quotient+1
   752     0044                     l906:
   753     0044  0820               	movf	___awdiv@divisor,w
   754     0045  0421               	iorwf	___awdiv@divisor+1,w
   755     0046  1903               	btfsc	3,2
   756     0047  2849               	goto	u511
   757     0048  284A               	goto	u510
   758     0049                     u511:
   759     0049  2881               	goto	l926
   760     004A                     u510:
   761     004A                     l908:
   762     004A  01A4               	clrf	___awdiv@counter
   763     004B  0AA4               	incf	___awdiv@counter,f
   764     004C  2858               	goto	l914
   765     004D                     l910:
   766     004D  3001               	movlw	1
   767     004E                     u525:
   768     004E  1003               	clrc
   769     004F  0DA0               	rlf	___awdiv@divisor,f
   770     0050  0DA1               	rlf	___awdiv@divisor+1,f
   771     0051  3EFF               	addlw	-1
   772     0052  1D03               	skipz
   773     0053  284E               	goto	u525
   774     0054                     l912:
   775     0054  3001               	movlw	1
   776     0055  00FF               	movwf	btemp+1
   777     0056  087F               	movf	btemp+1,w
   778     0057  07A4               	addwf	___awdiv@counter,f
   779     0058                     l914:
   780     0058  1FA1               	btfss	___awdiv@divisor+1,7
   781     0059  285B               	goto	u531
   782     005A  285C               	goto	u530
   783     005B                     u531:
   784     005B  284D               	goto	l910
   785     005C                     u530:
   786     005C                     l916:
   787     005C  3001               	movlw	1
   788     005D                     u545:
   789     005D  1003               	clrc
   790     005E  0DA6               	rlf	___awdiv@quotient,f
   791     005F  0DA7               	rlf	___awdiv@quotient+1,f
   792     0060  3EFF               	addlw	-1
   793     0061  1D03               	skipz
   794     0062  285D               	goto	u545
   795     0063  0821               	movf	___awdiv@divisor+1,w
   796     0064  0223               	subwf	___awdiv@dividend+1,w
   797     0065  1D03               	skipz
   798     0066  2869               	goto	u555
   799     0067  0820               	movf	___awdiv@divisor,w
   800     0068  0222               	subwf	___awdiv@dividend,w
   801     0069                     u555:
   802     0069  1C03               	skipc
   803     006A  286C               	goto	u551
   804     006B  286D               	goto	u550
   805     006C                     u551:
   806     006C  2874               	goto	l922
   807     006D                     u550:
   808     006D                     l918:
   809     006D  0820               	movf	___awdiv@divisor,w
   810     006E  02A2               	subwf	___awdiv@dividend,f
   811     006F  0821               	movf	___awdiv@divisor+1,w
   812     0070  1C03               	skipc
   813     0071  03A3               	decf	___awdiv@dividend+1,f
   814     0072  02A3               	subwf	___awdiv@dividend+1,f
   815     0073                     l920:
   816     0073  1426               	bsf	___awdiv@quotient,0
   817     0074                     l922:
   818     0074  3001               	movlw	1
   819     0075                     u565:
   820     0075  1003               	clrc
   821     0076  0CA1               	rrf	___awdiv@divisor+1,f
   822     0077  0CA0               	rrf	___awdiv@divisor,f
   823     0078  3EFF               	addlw	-1
   824     0079  1D03               	skipz
   825     007A  2875               	goto	u565
   826     007B                     l924:
   827     007B  3001               	movlw	1
   828     007C  02A4               	subwf	___awdiv@counter,f
   829     007D  1D03               	btfss	3,2
   830     007E  2880               	goto	u571
   831     007F  2881               	goto	u570
   832     0080                     u571:
   833     0080  285C               	goto	l916
   834     0081                     u570:
   835     0081                     l926:
   836     0081  0825               	movf	___awdiv@sign,w
   837     0082  1903               	btfsc	3,2
   838     0083  2885               	goto	u581
   839     0084  2886               	goto	u580
   840     0085                     u581:
   841     0085  288B               	goto	l930
   842     0086                     u580:
   843     0086                     l928:
   844     0086  09A6               	comf	___awdiv@quotient,f
   845     0087  09A7               	comf	___awdiv@quotient+1,f
   846     0088  0AA6               	incf	___awdiv@quotient,f
   847     0089  1903               	skipnz
   848     008A  0AA7               	incf	___awdiv@quotient+1,f
   849     008B                     l930:
   850     008B  0827               	movf	___awdiv@quotient+1,w
   851     008C  00A1               	movwf	?___awdiv+1
   852     008D  0826               	movf	___awdiv@quotient,w
   853     008E  00A0               	movwf	?___awdiv
   854     008F                     l285:
   855     008F  0008               	return
   856     0090                     __end_of___awdiv:
   857                           
   858                           	psect	text3
   859     0143                     __ptext3:	
   860 ;; *************** function _timer_0 *****************
   861 ;; Defined at:
   862 ;;		line 27 in file "7segmentDisplayWithTimer.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          4       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		Interrupt level 1
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     0143                     _timer_0:	
   890                           ;psect for function _timer_0
   891                           
   892     0143                     i1l846:
   893                           
   894                           ;7segmentDisplayWithTimer.c: 29: if(INTCONbits.TMR0IF == 1)
   895     0143  1D0B               	btfss	11,2	;volatile
   896     0144  2946               	goto	u44_21
   897     0145  2947               	goto	u44_20
   898     0146                     u44_21:
   899     0146  2971               	goto	i1l37
   900     0147                     u44_20:
   901     0147                     i1l848:
   902                           
   903                           ;7segmentDisplayWithTimer.c: 30: {;7segmentDisplayWithTimer.c: 31: if(timer_count == 2){
   904     0147  3002               	movlw	2
   905     0148  0679               	xorwf	_timer_count,w
   906     0149  1D03               	btfss	3,2
   907     014A  294C               	goto	u45_21
   908     014B  294D               	goto	u45_20
   909     014C                     u45_21:
   910     014C  294E               	goto	i1l852
   911     014D                     u45_20:
   912     014D                     i1l850:
   913                           
   914                           ;7segmentDisplayWithTimer.c: 32: timer_count =0;
   915     014D  01F9               	clrf	_timer_count
   916     014E                     i1l852:
   917                           
   918                           ;7segmentDisplayWithTimer.c: 33: };7segmentDisplayWithTimer.c: 34: if(timer_count==1){
   919     014E  0379               	decf	_timer_count,w
   920     014F  1D03               	btfss	3,2
   921     0150  2952               	goto	u46_21
   922     0151  2953               	goto	u46_20
   923     0152                     u46_21:
   924     0152  295D               	goto	i1l858
   925     0153                     u46_20:
   926     0153                     i1l854:
   927                           
   928                           ;7segmentDisplayWithTimer.c: 35: PORTCbits.RC0= 1;
   929     0153  1283               	bcf	3,5	;RP0=0, select bank0
   930     0154  1303               	bcf	3,6	;RP1=0, select bank0
   931     0155  1407               	bsf	7,0	;volatile
   932                           
   933                           ;7segmentDisplayWithTimer.c: 36: PORTCbits.RC1= 0;
   934     0156  1087               	bcf	7,1	;volatile
   935     0157                     i1l856:
   936                           
   937                           ;7segmentDisplayWithTimer.c: 37: PORTB = seg[i];}
   938     0157  0877               	movf	_i,w
   939     0158  3E2B               	addlw	(low (_seg| 0))& (0+255)
   940     0159  0084               	movwf	4
   941     015A  1383               	bcf	3,7	;select IRP bank0
   942     015B  0800               	movf	0,w
   943     015C  0086               	movwf	6	;volatile
   944     015D                     i1l858:
   945                           
   946                           ;7segmentDisplayWithTimer.c: 39: if(timer_count == 0){
   947     015D  0879               	movf	_timer_count,w
   948     015E  1D03               	btfss	3,2
   949     015F  2961               	goto	u47_21
   950     0160  2962               	goto	u47_20
   951     0161                     u47_21:
   952     0161  296C               	goto	i1l864
   953     0162                     u47_20:
   954     0162                     i1l860:
   955                           
   956                           ;7segmentDisplayWithTimer.c: 40: PORTCbits.RC1= 1;
   957     0162  1283               	bcf	3,5	;RP0=0, select bank0
   958     0163  1303               	bcf	3,6	;RP1=0, select bank0
   959     0164  1487               	bsf	7,1	;volatile
   960                           
   961                           ;7segmentDisplayWithTimer.c: 41: PORTCbits.RC0= 0;
   962     0165  1007               	bcf	7,0	;volatile
   963     0166                     i1l862:
   964                           
   965                           ;7segmentDisplayWithTimer.c: 42: PORTB = seg[j];}
   966     0166  0876               	movf	_j,w
   967     0167  3E2B               	addlw	(low (_seg| 0))& (0+255)
   968     0168  0084               	movwf	4
   969     0169  1383               	bcf	3,7	;select IRP bank0
   970     016A  0800               	movf	0,w
   971     016B  0086               	movwf	6	;volatile
   972     016C                     i1l864:
   973                           
   974                           ;7segmentDisplayWithTimer.c: 43: timer_count++ ;
   975     016C  3001               	movlw	1
   976     016D  00FF               	movwf	btemp+1
   977     016E  087F               	movf	btemp+1,w
   978     016F  07F9               	addwf	_timer_count,f
   979     0170                     i1l866:
   980                           
   981                           ;7segmentDisplayWithTimer.c: 44: INTCONbits.TMR0IF = 0;
   982     0170  110B               	bcf	11,2	;volatile
   983     0171                     i1l37:
   984     0171  0873               	movf	??_timer_0+3,w
   985     0172  00FF               	movwf	btemp+1
   986     0173  0872               	movf	??_timer_0+2,w
   987     0174  008A               	movwf	10
   988     0175  0871               	movf	??_timer_0+1,w
   989     0176  0084               	movwf	4
   990     0177  0E70               	swapf	??_timer_0,w
   991     0178  0083               	movwf	3
   992     0179  0EFE               	swapf	btemp,f
   993     017A  0E7E               	swapf	btemp,w
   994     017B  0009               	retfie
   995     017C                     __end_of_timer_0:
   996     007E                     btemp	set	126	;btemp
   997     007E                     wtemp0	set	126
   998                           
   999                           	psect	intentry
  1000     0004                     __pintentry:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _timer_0: [wreg-fsr0h+status,2+status,0+btemp+1]
  1003                           
  1004     0004                     interrupt_function:
  1005     007E                     saved_w	set	btemp
  1006     0004  00FE               	movwf	btemp
  1007     0005  0E03               	swapf	3,w
  1008     0006  00F0               	movwf	??_timer_0
  1009     0007  0804               	movf	4,w
  1010     0008  00F1               	movwf	??_timer_0+1
  1011     0009  080A               	movf	10,w
  1012     000A  00F2               	movwf	??_timer_0+2
  1013     000B  087F               	movf	btemp+1,w
  1014     000C  00F3               	movwf	??_timer_0+3
  1015     000D  120A  118A  2943   	ljmp	_timer_0
  1016                           
  1017                           	psect	config
  1018                           
  1019                           ;Config register CONFIG @ 0x2007
  1020                           ;	Oscillator Selection bits
  1021                           ;	FOSC = HS, HS oscillator
  1022                           ;	Watchdog Timer Enable bit
  1023                           ;	WDTE = OFF, WDT disabled
  1024                           ;	Power-up Timer Enable bit
  1025                           ;	PWRTE = OFF, PWRT disabled
  1026                           ;	Brown-out Reset Enable bit
  1027                           ;	BOREN = OFF, BOR disabled
  1028                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1029                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1030                           ;	Data EEPROM Memory Code Protection bit
  1031                           ;	CPD = OFF, Data EEPROM code protection off
  1032                           ;	Flash Program Memory Write Enable bits
  1033                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1034                           ;	In-Circuit Debugger Mode bit
  1035                           ;	DEBUG = 0x1, unprogrammed default
  1036                           ;	Flash Program Memory Code Protection bit
  1037                           ;	CP = OFF, Code protection off
  1038     2007                     	org	8199
  1039     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1238
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_0                                              4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _timer_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 23:48:01 2023

                      _i 0077                        _j 0076                        pc 0002  
           ___awdiv@sign 0025                       fsr 0004                      l285 008F  
                    l298 00EA                      l900 0039                      l910 004D  
                    l902 003E                      l920 0073                      l912 0054  
                    l904 0042                      l930 008B                      l922 0074  
                    l914 0058                      l906 0044                      l924 007B  
                    l916 005C                      l908 004A                      l940 009C  
                    l918 006D                      l926 0081                      l950 00B0  
                    l942 009E                      l934 0090                      l928 0086  
                    l960 00CF                      l952 00B7                      l944 00A2  
                    l936 0091                      l890 0027                      l962 00D6  
                    l954 00BB                      l946 00A7                      l938 0097  
                    l892 002A                      l956 00BF                      l948 00AD  
                    l964 00DC                      l980 00FA                      l972 00EB  
                    l894 002E                      l966 00E1                      l958 00C9  
                    l990 012F                      l982 00FB                      l974 00EE  
                    l896 0033                      l968 00E6                      l992 0130  
                    l984 0111                      l976 00F6                      l898 0035  
                    l986 0125                      l978 00F9                      l988 0129  
                    u500 0039                      u501 0038                      u510 004A  
                    u511 0049                      u600 00A2                      u601 00A1  
                    u530 005C                      u610 00AD                      u531 005B  
                    u611 00AC                      u525 004E                      u550 006D  
                    u630 00BF                      u551 006C                      u631 00BE  
                    u640 00C9                      u545 005D                      u641 00C8  
                    u625 00B1                      u570 0081                      u490 002E  
                    u571 0080                      u555 0069                      u491 002D  
                    u580 0086                      u660 00DC                      u581 0085  
                    u565 0075                      u661 00DB                      u645 00C5  
                    u670 00E1                      u590 0097                      u671 00E0  
                    u655 00D0                      u591 0096                      u680 012F  
                    u681 012E                      u697 0138                      _seg 002B  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   i1l37 0171                     _TMR0 0001                     _main 00EB  
                   btemp 007E                     start 0010                    ?_main 0070  
        __end_of___awdiv 0090          __end_of___awmod 00EB          ___awdiv@divisor 0020  
                  i1l850 014D                    i1l860 0162                    i1l852 014E  
                  i1l862 0166                    i1l854 0153                    i1l846 0143  
                  i1l864 016C                    i1l856 0157                    i1l848 0147  
                  i1l866 0170                    i1l858 015D          ___awdiv@counter 0024  
                  _PORTB 0006                    u44_20 0147                    u44_21 0146  
                  u45_20 014D                    u45_21 014C                    u46_20 0153  
                  u46_21 0152                    u47_20 0162                    u47_21 0161  
                  _TRISB 0086                    pclath 000A          __end_of_timer_0 017C  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 0143                   ??_main 0028         ___awdiv@dividend 0022  
                 _TRISC0 0438                   _TRISC1 0439                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0026          ___awmod@divisor 0020  
                 _number 0078          ___awmod@counter 0074                   saved_w 007E  
              ??_timer_0 0070  __end_of__initialization 0023           __pcstackCOMMON 0070  
           __pidataBANK0 018F               __pnvCOMMON 0076               __pmaintext 00EB  
             __pintentry 0004                  ___awdiv 0027                  ___awmod 0090  
                __ptext1 0090                  __ptext2 0027                  __ptext3 0143  
       ___awmod@dividend 0022                  _timer_0 0143     end_of_initialization 0023  
              _PORTCbits 0007      start_initialization 0013               init_fetch0 017C  
            __pdataBANK0 002B              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0020                 ?___awmod 0020  
               ?_timer_0 0070        interrupt_function 0004               _INTCONbits 000B  
               init_ram0 0180                 intlevel1 0000               _OPTION_REG 0081  
            _timer_count 0079  
