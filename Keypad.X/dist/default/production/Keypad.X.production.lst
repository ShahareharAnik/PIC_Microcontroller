

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 00:55:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0006                     _PORTBbits	set	6
   171     0008                     _PORTDbits	set	8
   172     0007                     _PORTC	set	7
   173     0086                     _TRISB	set	134
   174     0088                     _TRISD	set	136
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	strings
   178     0003                     __pstrings:
   179     0003                     stringtab:
   180     0003                     __stringtab:
   181     0003                     stringcode:	
   182                           ;	String table - string pointers are 1 byte each
   183                           
   184     0003                     stringdir:
   185     0003  3000               	movlw	high stringdir
   186     0004  008A               	movwf	10
   187     0005  0804               	movf	4,w
   188     0006  0A84               	incf	4,f
   189     0007  0782               	addwf	2,f
   190     0008                     __stringbase:
   191     0008  3400               	retlw	0
   192     0009                     __end_of__stringtab:
   193     0009                     STR_1:
   194     0009  344B               	retlw	75	;'K'
   195     000A  3465               	retlw	101	;'e'
   196     000B  3479               	retlw	121	;'y'
   197     000C  3470               	retlw	112	;'p'
   198     000D  3461               	retlw	97	;'a'
   199     000E  3464               	retlw	100	;'d'
   200     000F  343A               	retlw	58	;':'
   201     0010  3400               	retlw	0
   202                           
   203                           	psect	cinit
   204     07FC                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07FC                     __initialization:
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2F08   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	cstackCOMMON
   216     0070                     __pcstackCOMMON:
   217     0070                     ?_lcd_data:
   218     0070                     ??_lcd_data:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_lcd_command:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_lcd_command:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_lcd_initialise:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_keypad:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238     0070                     	ds	2
   239     0072                     lcd_data@data:
   240     0072                     lcd_command@cmd:	
   241                           ; 1 bytes @ 0x2
   242                           
   243                           
   244                           ; 1 bytes @ 0x2
   245     0072                     	ds	1
   246     0073                     ?_lcd_string:
   247     0073                     ??_lcd_initialise:	
   248                           ; 1 bytes @ 0x3
   249                           
   250     0073                     ??_keypad:	
   251                           ; 1 bytes @ 0x3
   252                           
   253     0073                     lcd_string@num:	
   254                           ; 1 bytes @ 0x3
   255                           
   256                           
   257                           ; 1 bytes @ 0x3
   258     0073                     	ds	1
   259     0074                     ??_lcd_string:
   260     0074                     lcd_string@str:	
   261                           ; 1 bytes @ 0x4
   262                           
   263                           
   264                           ; 1 bytes @ 0x4
   265     0074                     	ds	1
   266     0075                     lcd_string@i:
   267                           
   268                           ; 1 bytes @ 0x5
   269     0075                     	ds	1
   270     0076                     ??_main:
   271                           
   272                           	psect	maintext
   273     0708                     __pmaintext:	
   274                           ; 1 bytes @ 0x6
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 114 in file "keypad.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels required when called: 2
   300 ;; This function calls:
   301 ;;		_keypad
   302 ;;		_lcd_command
   303 ;;		_lcd_initialise
   304 ;;		_lcd_string
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310     0708                     _main:	
   311                           ;psect for function _main
   312                           
   313     0708                     l758:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   316                           
   317                           
   318                           ;keypad.c: 116:         TRISC =0x00;
   319     0708  1683               	bsf	3,5	;RP0=1, select bank1
   320     0709  1303               	bcf	3,6	;RP1=0, select bank1
   321     070A  0187               	clrf	7	;volatile
   322                           
   323                           ;keypad.c: 117:         TRISD = 0x00;
   324     070B  0188               	clrf	8	;volatile
   325     070C                     l760:
   326                           
   327                           ;keypad.c: 118:         TRISB = 0xF0;
   328     070C  30F0               	movlw	240
   329     070D  0086               	movwf	6	;volatile
   330     070E                     l762:
   331                           
   332                           ;keypad.c: 119:         lcd_initialise();
   333     070E  120A  118A  26D4  120A  118A  	fcall	_lcd_initialise
   334     0713                     l764:
   335                           
   336                           ;keypad.c: 121:             lcd_command(0x80);
   337     0713  3080               	movlw	128
   338     0714  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   339     0719                     l766:
   340                           
   341                           ;keypad.c: 122:             lcd_string("Keypad:",7);
   342     0719  3007               	movlw	7
   343     071A  00F3               	movwf	lcd_string@num
   344     071B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   345     071C  120A  118A  26ED  120A  118A  	fcall	_lcd_string
   346     0721                     l768:
   347                           
   348                           ;keypad.c: 123:             lcd_command(0xC1);
   349     0721  30C1               	movlw	193
   350     0722  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   351     0727                     l770:
   352                           
   353                           ;keypad.c: 126:            keypad();
   354     0727  120A  118A  2730  120A  118A  	fcall	_keypad
   355     072C  2F27               	goto	l770
   356     072D  120A  118A  2800   	ljmp	start
   357     0730                     __end_of_main:
   358                           
   359                           	psect	text1
   360     06ED                     __ptext1:	
   361 ;; *************** function _lcd_string *****************
   362 ;; Defined at:
   363 ;;		line 48 in file "keypad.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  str             1    wreg     PTR const unsigned char 
   366 ;;		 -> STR_1(8), 
   367 ;;  num             1    3[COMMON] unsigned char 
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  str             1    4[COMMON] PTR const unsigned char 
   370 ;;		 -> STR_1(8), 
   371 ;;  i               1    5[COMMON] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         1       0       0       0       0
   382 ;;      Locals:         2       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         3       0       0       0       0
   385 ;;Total ram usage:        3 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 1
   388 ;; This function calls:
   389 ;;		_lcd_data
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395     06ED                     _lcd_string:	
   396                           ;psect for function _lcd_string
   397                           
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401                           ;lcd_string@str stored from wreg
   402     06ED  00F4               	movwf	lcd_string@str
   403     06EE                     l750:
   404                           
   405                           ;keypad.c: 48: void lcd_string(const unsigned char *str, unsigned char num);keypad.c: 49
      +                          : {;keypad.c: 50:     unsigned char i;;keypad.c: 51:     for(i=0;i<num;i++){
   406     06EE  01F5               	clrf	lcd_string@i
   407     06EF  2F01               	goto	l756
   408     06F0                     l752:
   409                           
   410                           ;keypad.c: 52:         lcd_data(str[i]);
   411     06F0  0875               	movf	lcd_string@i,w
   412     06F1  0774               	addwf	lcd_string@str,w
   413     06F2  0084               	movwf	4
   414     06F3  120A  118A  2003  120A  118A  	fcall	stringdir
   415     06F8  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   416     06FD                     l754:
   417                           
   418                           ;keypad.c: 53:     }
   419     06FD  3001               	movlw	1
   420     06FE  00FF               	movwf	btemp+1
   421     06FF  087F               	movf	btemp+1,w
   422     0700  07F5               	addwf	lcd_string@i,f
   423     0701                     l756:
   424     0701  0873               	movf	lcd_string@num,w
   425     0702  0275               	subwf	lcd_string@i,w
   426     0703  1C03               	skipc
   427     0704  2F06               	goto	u261
   428     0705  2F07               	goto	u260
   429     0706                     u261:
   430     0706  2EF0               	goto	l752
   431     0707                     u260:
   432     0707                     l26:
   433     0707  0008               	return
   434     0708                     __end_of_lcd_string:
   435                           
   436                           	psect	text2
   437     06D4                     __ptext2:	
   438 ;; *************** function _lcd_initialise *****************
   439 ;; Defined at:
   440 ;;		line 55 in file "keypad.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 1
   461 ;; This function calls:
   462 ;;		_lcd_command
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     06D4                     _lcd_initialise:	
   469                           ;psect for function _lcd_initialise
   470                           
   471     06D4                     l708:	
   472                           ;incstack = 0
   473                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   474                           
   475                           
   476                           ;keypad.c: 56:     lcd_command(0x38);
   477     06D4  3038               	movlw	56
   478     06D5  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   479                           
   480                           ;keypad.c: 57:     lcd_command(0x06);
   481     06DA  3006               	movlw	6
   482     06DB  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   483                           
   484                           ;keypad.c: 58:     lcd_command(0x0C);
   485     06E0  300C               	movlw	12
   486     06E1  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   487                           
   488                           ;keypad.c: 59:     lcd_command(0x01);
   489     06E6  3001               	movlw	1
   490     06E7  120A  118A  26C0  120A  118A  	fcall	_lcd_command
   491     06EC                     l29:
   492     06EC  0008               	return
   493     06ED                     __end_of_lcd_initialise:
   494                           
   495                           	psect	text3
   496     06C0                     __ptext3:	
   497 ;; *************** function _lcd_command *****************
   498 ;; Defined at:
   499 ;;		line 40 in file "keypad.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  cmd             1    wreg     unsigned char 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  cmd             1    2[COMMON] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         1       0       0       0       0
   515 ;;      Temps:          2       0       0       0       0
   516 ;;      Totals:         3       0       0       0       0
   517 ;;Total ram usage:        3 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_lcd_initialise
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     06C0                     _lcd_command:	
   528                           ;psect for function _lcd_command
   529                           
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _lcd_command: [wreg]
   533                           ;lcd_command@cmd stored from wreg
   534     06C0  00F2               	movwf	lcd_command@cmd
   535     06C1                     l690:
   536                           
   537                           ;keypad.c: 41:     PORTC = cmd;
   538     06C1  0872               	movf	lcd_command@cmd,w
   539     06C2  1283               	bcf	3,5	;RP0=0, select bank0
   540     06C3  1303               	bcf	3,6	;RP1=0, select bank0
   541     06C4  0087               	movwf	7	;volatile
   542     06C5                     l692:
   543                           
   544                           ;keypad.c: 42:     PORTDbits.RD0 = 0;
   545     06C5  1008               	bcf	8,0	;volatile
   546     06C6                     l694:
   547                           
   548                           ;keypad.c: 43:     PORTDbits.RD1 = 0;
   549     06C6  1088               	bcf	8,1	;volatile
   550     06C7                     l696:
   551                           
   552                           ;keypad.c: 44:     PORTDbits.RD2 = 1;
   553     06C7  1508               	bsf	8,2	;volatile
   554                           
   555                           ;keypad.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
   556     06C8  3007               	movlw	7
   557     06C9  00F1               	movwf	??_lcd_command+1
   558     06CA  307D               	movlw	125
   559     06CB  00F0               	movwf	??_lcd_command
   560     06CC                     u277:
   561     06CC  0BF0               	decfsz	??_lcd_command,f
   562     06CD  2ECC               	goto	u277
   563     06CE  0BF1               	decfsz	??_lcd_command+1,f
   564     06CF  2ECC               	goto	u277
   565     06D0                     l698:
   566                           
   567                           ;keypad.c: 46:     PORTDbits.RD2 = 0;
   568     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   569     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   570     06D2  1108               	bcf	8,2	;volatile
   571     06D3                     l20:
   572     06D3  0008               	return
   573     06D4                     __end_of_lcd_command:
   574                           
   575                           	psect	text4
   576     0730                     __ptext4:	
   577 ;; *************** function _keypad *****************
   578 ;; Defined at:
   579 ;;		line 62 in file "keypad.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 1
   600 ;; This function calls:
   601 ;;		_lcd_data
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607     0730                     _keypad:	
   608                           ;psect for function _keypad
   609                           
   610     0730                     l710:	
   611                           ;incstack = 0
   612                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   613                           
   614                           
   615                           ;keypad.c: 63:   PORTBbits.RB1=1;PORTBbits.RB2=0;PORTBbits.RB3=0;
   616     0730  1283               	bcf	3,5	;RP0=0, select bank0
   617     0731  1303               	bcf	3,6	;RP1=0, select bank0
   618     0732  1486               	bsf	6,1	;volatile
   619     0733  1106               	bcf	6,2	;volatile
   620     0734  1186               	bcf	6,3	;volatile
   621                           
   622                           ;keypad.c: 64:   if(PORTBbits.RB4==1){
   623     0735  1E06               	btfss	6,4	;volatile
   624     0736  2F38               	goto	u21
   625     0737  2F39               	goto	u20
   626     0738                     u21:
   627     0738  2F45               	goto	l32
   628     0739                     u20:
   629     0739                     l712:
   630                           
   631                           ;keypad.c: 65:       lcd_data('1');
   632     0739  3031               	movlw	49
   633     073A  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   634     073F                     l33:	
   635                           ;keypad.c: 66:       while(PORTBbits.RB4==1);
   636                           
   637     073F  1283               	bcf	3,5	;RP0=0, select bank0
   638     0740  1303               	bcf	3,6	;RP1=0, select bank0
   639     0741  1A06               	btfsc	6,4	;volatile
   640     0742  2F44               	goto	u31
   641     0743  2F45               	goto	u30
   642     0744                     u31:
   643     0744  2F3F               	goto	l33
   644     0745                     u30:
   645     0745                     l32:	
   646                           ;keypad.c: 67:   }
   647                           
   648                           
   649                           ;keypad.c: 68:   if(PORTBbits.RB5==1){
   650     0745  1E86               	btfss	6,5	;volatile
   651     0746  2F48               	goto	u41
   652     0747  2F49               	goto	u40
   653     0748                     u41:
   654     0748  2F55               	goto	l36
   655     0749                     u40:
   656     0749                     l714:
   657                           
   658                           ;keypad.c: 69:       lcd_data('4');
   659     0749  3034               	movlw	52
   660     074A  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   661     074F                     l37:	
   662                           ;keypad.c: 70:       while(PORTBbits.RB5==1);
   663                           
   664     074F  1283               	bcf	3,5	;RP0=0, select bank0
   665     0750  1303               	bcf	3,6	;RP1=0, select bank0
   666     0751  1A86               	btfsc	6,5	;volatile
   667     0752  2F54               	goto	u51
   668     0753  2F55               	goto	u50
   669     0754                     u51:
   670     0754  2F4F               	goto	l37
   671     0755                     u50:
   672     0755                     l36:	
   673                           ;keypad.c: 71:   }
   674                           
   675                           
   676                           ;keypad.c: 72:   if(PORTBbits.RB6==1){
   677     0755  1F06               	btfss	6,6	;volatile
   678     0756  2F58               	goto	u61
   679     0757  2F59               	goto	u60
   680     0758                     u61:
   681     0758  2F65               	goto	l40
   682     0759                     u60:
   683     0759                     l716:
   684                           
   685                           ;keypad.c: 73:       lcd_data('7');
   686     0759  3037               	movlw	55
   687     075A  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   688     075F                     l41:	
   689                           ;keypad.c: 74:       while(PORTBbits.RB6==1);
   690                           
   691     075F  1283               	bcf	3,5	;RP0=0, select bank0
   692     0760  1303               	bcf	3,6	;RP1=0, select bank0
   693     0761  1B06               	btfsc	6,6	;volatile
   694     0762  2F64               	goto	u71
   695     0763  2F65               	goto	u70
   696     0764                     u71:
   697     0764  2F5F               	goto	l41
   698     0765                     u70:
   699     0765                     l40:	
   700                           ;keypad.c: 75:   }
   701                           
   702                           
   703                           ;keypad.c: 76:   if(PORTBbits.RB7==1){
   704     0765  1F86               	btfss	6,7	;volatile
   705     0766  2F68               	goto	u81
   706     0767  2F69               	goto	u80
   707     0768                     u81:
   708     0768  2F75               	goto	l44
   709     0769                     u80:
   710     0769                     l718:
   711                           
   712                           ;keypad.c: 77:       lcd_data('*');
   713     0769  302A               	movlw	42
   714     076A  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   715     076F                     l45:	
   716                           ;keypad.c: 78:       while(PORTBbits.RB7==1);
   717                           
   718     076F  1283               	bcf	3,5	;RP0=0, select bank0
   719     0770  1303               	bcf	3,6	;RP1=0, select bank0
   720     0771  1B86               	btfsc	6,7	;volatile
   721     0772  2F74               	goto	u91
   722     0773  2F75               	goto	u90
   723     0774                     u91:
   724     0774  2F6F               	goto	l45
   725     0775                     u90:
   726     0775                     l44:	
   727                           ;keypad.c: 79:   }
   728                           
   729                           
   730                           ;keypad.c: 80:    PORTBbits.RB1=0;PORTBbits.RB2=1;PORTBbits.RB3=0;
   731     0775  1086               	bcf	6,1	;volatile
   732     0776  1506               	bsf	6,2	;volatile
   733     0777  1186               	bcf	6,3	;volatile
   734                           
   735                           ;keypad.c: 81:   if(PORTBbits.RB4==1){
   736     0778  1E06               	btfss	6,4	;volatile
   737     0779  2F7B               	goto	u101
   738     077A  2F7C               	goto	u100
   739     077B                     u101:
   740     077B  2F88               	goto	l48
   741     077C                     u100:
   742     077C                     l720:
   743                           
   744                           ;keypad.c: 82:       lcd_data('2');
   745     077C  3032               	movlw	50
   746     077D  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   747     0782                     l49:	
   748                           ;keypad.c: 83:       while(PORTBbits.RB4==1);
   749                           
   750     0782  1283               	bcf	3,5	;RP0=0, select bank0
   751     0783  1303               	bcf	3,6	;RP1=0, select bank0
   752     0784  1A06               	btfsc	6,4	;volatile
   753     0785  2F87               	goto	u111
   754     0786  2F88               	goto	u110
   755     0787                     u111:
   756     0787  2F82               	goto	l49
   757     0788                     u110:
   758     0788                     l48:	
   759                           ;keypad.c: 84:   }
   760                           
   761                           
   762                           ;keypad.c: 85:   if(PORTBbits.RB5==1){
   763     0788  1E86               	btfss	6,5	;volatile
   764     0789  2F8B               	goto	u121
   765     078A  2F8C               	goto	u120
   766     078B                     u121:
   767     078B  2F98               	goto	l52
   768     078C                     u120:
   769     078C                     l722:
   770                           
   771                           ;keypad.c: 86:       lcd_data('5');
   772     078C  3035               	movlw	53
   773     078D  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   774     0792                     l53:	
   775                           ;keypad.c: 87:       while(PORTBbits.RB5==1);
   776                           
   777     0792  1283               	bcf	3,5	;RP0=0, select bank0
   778     0793  1303               	bcf	3,6	;RP1=0, select bank0
   779     0794  1A86               	btfsc	6,5	;volatile
   780     0795  2F97               	goto	u131
   781     0796  2F98               	goto	u130
   782     0797                     u131:
   783     0797  2F92               	goto	l53
   784     0798                     u130:
   785     0798                     l52:	
   786                           ;keypad.c: 88:   }
   787                           
   788                           
   789                           ;keypad.c: 89:   if(PORTBbits.RB6==1){
   790     0798  1F06               	btfss	6,6	;volatile
   791     0799  2F9B               	goto	u141
   792     079A  2F9C               	goto	u140
   793     079B                     u141:
   794     079B  2FA8               	goto	l56
   795     079C                     u140:
   796     079C                     l724:
   797                           
   798                           ;keypad.c: 90:       lcd_data('8');
   799     079C  3038               	movlw	56
   800     079D  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   801     07A2                     l57:	
   802                           ;keypad.c: 91:       while(PORTBbits.RB6==1);
   803                           
   804     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   805     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   806     07A4  1B06               	btfsc	6,6	;volatile
   807     07A5  2FA7               	goto	u151
   808     07A6  2FA8               	goto	u150
   809     07A7                     u151:
   810     07A7  2FA2               	goto	l57
   811     07A8                     u150:
   812     07A8                     l56:	
   813                           ;keypad.c: 92:   }
   814                           
   815                           
   816                           ;keypad.c: 93:   if(PORTBbits.RB7==1){
   817     07A8  1F86               	btfss	6,7	;volatile
   818     07A9  2FAB               	goto	u161
   819     07AA  2FAC               	goto	u160
   820     07AB                     u161:
   821     07AB  2FB8               	goto	l60
   822     07AC                     u160:
   823     07AC                     l726:
   824                           
   825                           ;keypad.c: 94:       lcd_data('0');
   826     07AC  3030               	movlw	48
   827     07AD  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   828     07B2                     l61:	
   829                           ;keypad.c: 95:       while(PORTBbits.RB7==1);
   830                           
   831     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   832     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   833     07B4  1B86               	btfsc	6,7	;volatile
   834     07B5  2FB7               	goto	u171
   835     07B6  2FB8               	goto	u170
   836     07B7                     u171:
   837     07B7  2FB2               	goto	l61
   838     07B8                     u170:
   839     07B8                     l60:	
   840                           ;keypad.c: 96:   } PORTBbits.RB1=0;PORTBbits.RB2=0;PORTBbits.RB3=1;
   841                           
   842     07B8  1086               	bcf	6,1	;volatile
   843     07B9  1106               	bcf	6,2	;volatile
   844     07BA  1586               	bsf	6,3	;volatile
   845                           
   846                           ;keypad.c: 97:   if(PORTBbits.RB4==1){
   847     07BB  1E06               	btfss	6,4	;volatile
   848     07BC  2FBE               	goto	u181
   849     07BD  2FBF               	goto	u180
   850     07BE                     u181:
   851     07BE  2FCB               	goto	l64
   852     07BF                     u180:
   853     07BF                     l728:
   854                           
   855                           ;keypad.c: 98:       lcd_data('3');
   856     07BF  3033               	movlw	51
   857     07C0  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   858     07C5                     l65:	
   859                           ;keypad.c: 99:       while(PORTBbits.RB4==1);
   860                           
   861     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   862     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   863     07C7  1A06               	btfsc	6,4	;volatile
   864     07C8  2FCA               	goto	u191
   865     07C9  2FCB               	goto	u190
   866     07CA                     u191:
   867     07CA  2FC5               	goto	l65
   868     07CB                     u190:
   869     07CB                     l64:	
   870                           ;keypad.c: 100:   }
   871                           
   872                           
   873                           ;keypad.c: 101:   if(PORTBbits.RB5==1){
   874     07CB  1E86               	btfss	6,5	;volatile
   875     07CC  2FCE               	goto	u201
   876     07CD  2FCF               	goto	u200
   877     07CE                     u201:
   878     07CE  2FDB               	goto	l68
   879     07CF                     u200:
   880     07CF                     l730:
   881                           
   882                           ;keypad.c: 102:       lcd_data('6');
   883     07CF  3036               	movlw	54
   884     07D0  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   885     07D5                     l69:	
   886                           ;keypad.c: 103:       while(PORTBbits.RB5==1);
   887                           
   888     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   889     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   890     07D7  1A86               	btfsc	6,5	;volatile
   891     07D8  2FDA               	goto	u211
   892     07D9  2FDB               	goto	u210
   893     07DA                     u211:
   894     07DA  2FD5               	goto	l69
   895     07DB                     u210:
   896     07DB                     l68:	
   897                           ;keypad.c: 104:   }
   898                           
   899                           
   900                           ;keypad.c: 105:   if(PORTBbits.RB6==1){
   901     07DB  1F06               	btfss	6,6	;volatile
   902     07DC  2FDE               	goto	u221
   903     07DD  2FDF               	goto	u220
   904     07DE                     u221:
   905     07DE  2FEB               	goto	l72
   906     07DF                     u220:
   907     07DF                     l732:
   908                           
   909                           ;keypad.c: 106:       lcd_data('9');
   910     07DF  3039               	movlw	57
   911     07E0  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   912     07E5                     l73:	
   913                           ;keypad.c: 107:       while(PORTBbits.RB6==1);
   914                           
   915     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   916     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   917     07E7  1B06               	btfsc	6,6	;volatile
   918     07E8  2FEA               	goto	u231
   919     07E9  2FEB               	goto	u230
   920     07EA                     u231:
   921     07EA  2FE5               	goto	l73
   922     07EB                     u230:
   923     07EB                     l72:	
   924                           ;keypad.c: 108:   }
   925                           
   926                           
   927                           ;keypad.c: 109:   if(PORTBbits.RB7==1){
   928     07EB  1F86               	btfss	6,7	;volatile
   929     07EC  2FEE               	goto	u241
   930     07ED  2FEF               	goto	u240
   931     07EE                     u241:
   932     07EE  2FFB               	goto	l80
   933     07EF                     u240:
   934     07EF                     l734:
   935                           
   936                           ;keypad.c: 110:       lcd_data('#');
   937     07EF  3023               	movlw	35
   938     07F0  120A  118A  26AC  120A  118A  	fcall	_lcd_data
   939     07F5                     l77:	
   940                           ;keypad.c: 111:       while(PORTBbits.RB7==1);
   941                           
   942     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   943     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   944     07F7  1B86               	btfsc	6,7	;volatile
   945     07F8  2FFA               	goto	u251
   946     07F9  2FFB               	goto	u250
   947     07FA                     u251:
   948     07FA  2FF5               	goto	l77
   949     07FB                     u250:
   950     07FB                     l80:
   951     07FB  0008               	return
   952     07FC                     __end_of_keypad:
   953                           
   954                           	psect	text5
   955     06AC                     __ptext5:	
   956 ;; *************** function _lcd_data *****************
   957 ;; Defined at:
   958 ;;		line 32 in file "keypad.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  data            1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  data            1    2[COMMON] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0
   974 ;;      Temps:          2       0       0       0       0
   975 ;;      Totals:         3       0       0       0       0
   976 ;;Total ram usage:        3 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_lcd_string
   982 ;;		_keypad
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986     06AC                     _lcd_data:	
   987                           ;psect for function _lcd_data
   988                           
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _lcd_data: [wreg]
   992                           ;lcd_data@data stored from wreg
   993     06AC  00F2               	movwf	lcd_data@data
   994     06AD                     l680:
   995                           
   996                           ;keypad.c: 33:     PORTC = data;
   997     06AD  0872               	movf	lcd_data@data,w
   998     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   999     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1000     06B0  0087               	movwf	7	;volatile
  1001     06B1                     l682:
  1002                           
  1003                           ;keypad.c: 34:     PORTDbits.RD0 = 1;
  1004     06B1  1408               	bsf	8,0	;volatile
  1005     06B2                     l684:
  1006                           
  1007                           ;keypad.c: 35:     PORTDbits.RD1 = 0;
  1008     06B2  1088               	bcf	8,1	;volatile
  1009     06B3                     l686:
  1010                           
  1011                           ;keypad.c: 36:     PORTDbits.RD2 = 1;
  1012     06B3  1508               	bsf	8,2	;volatile
  1013                           
  1014                           ;keypad.c: 37:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1015     06B4  3007               	movlw	7
  1016     06B5  00F1               	movwf	??_lcd_data+1
  1017     06B6  307D               	movlw	125
  1018     06B7  00F0               	movwf	??_lcd_data
  1019     06B8                     u287:
  1020     06B8  0BF0               	decfsz	??_lcd_data,f
  1021     06B9  2EB8               	goto	u287
  1022     06BA  0BF1               	decfsz	??_lcd_data+1,f
  1023     06BB  2EB8               	goto	u287
  1024     06BC                     l688:
  1025                           
  1026                           ;keypad.c: 38:     PORTDbits.RD2 = 0;
  1027     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1028     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1029     06BE  1108               	bcf	8,2	;volatile
  1030     06BF                     l17:
  1031     06BF  0008               	return
  1032     06C0                     __end_of_lcd_data:
  1033     007E                     btemp	set	126	;btemp
  1034     007E                     wtemp0	set	126
  1035                           
  1036                           	psect	config
  1037                           
  1038                           ;Config register CONFIG @ 0x2007
  1039                           ;	Oscillator Selection bits
  1040                           ;	FOSC = HS, HS oscillator
  1041                           ;	Watchdog Timer Enable bit
  1042                           ;	WDTE = OFF, WDT disabled
  1043                           ;	Power-up Timer Enable bit
  1044                           ;	PWRTE = OFF, PWRT disabled
  1045                           ;	Brown-out Reset Enable bit
  1046                           ;	BOREN = OFF, BOR disabled
  1047                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1048                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1049                           ;	Data EEPROM Memory Code Protection bit
  1050                           ;	CPD = OFF, Data EEPROM code protection off
  1051                           ;	Flash Program Memory Write Enable bits
  1052                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1053                           ;	In-Circuit Debugger Mode bit
  1054                           ;	DEBUG = 0x1, unprogrammed default
  1055                           ;	Flash Program Memory Code Protection bit
  1056                           ;	CP = OFF, Code protection off
  1057     2007                     	org	8199
  1058     2007  3FBA               	dw	16314

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command
    _keypad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     259
                             _keypad
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     214
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad
     _lcd_data
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 00:55:14 2023

                      pc 0002             lcd_data@data 0072                       l20 06D3  
                     l40 0765                       l32 0745                       l17 06BF  
                     l41 075F                       l33 073F                       l26 0707  
                     l60 07B8                       l52 0798                       l44 0775  
                     l36 0755                       l61 07B2                       l53 0792  
                     l45 076F                       l37 074F                       l29 06EC  
                     l80 07FB                       l72 07EB                       l64 07CB  
                     l56 07A8                       l48 0788                       l73 07E5  
                     l65 07C5                       l57 07A2                       l49 0782  
                     l68 07DB                       l77 07F5                       l69 07D5  
                     u20 0739                       u21 0738                       u30 0745  
                     u31 0744                       u40 0749                       u41 0748  
                     u50 0755                       u51 0754                       u60 0759  
                     u61 0758                       u70 0765                       u71 0764  
                     u80 0769                       u81 0768                       u90 0775  
                     u91 0774                       fsr 0004                      l710 0730  
                    l720 077C                      l712 0739                      l730 07CF  
                    l722 078C                      l714 0749                      l732 07DF  
                    l724 079C                      l716 0759                      l708 06D4  
                    l734 07EF                      l726 07AC                      l718 0769  
                    l750 06EE                      l680 06AD                      l728 07BF  
                    l752 06F0                      l760 070C                      l682 06B1  
                    l690 06C1                      l754 06FD                      l770 0727  
                    l762 070E                      l684 06B2                      l692 06C5  
                    l756 0701                      l764 0713                      l686 06B3  
                    l694 06C6                      l766 0719                      l758 0708  
                    l688 06BC                      l696 06C7                      l768 0721  
                    l698 06D0                      u100 077C                      u101 077B  
                    u110 0788                      u111 0787                      u200 07CF  
                    u120 078C                      u201 07CE                      u121 078B  
                    u210 07DB                      u130 0798                      u211 07DA  
                    u131 0797                      u220 07DF                      u140 079C  
                    u221 07DE                      u141 079B                      u230 07EB  
                    u150 07A8                      u231 07EA                      u151 07A7  
                    u240 07EF                      u160 07AC                      u241 07EE  
                    u161 07AB                      u250 07FB                      u170 07B8  
                    u251 07FA                      u171 07B7                      u180 07BF  
                    u260 0707                      u181 07BE                      u261 0706  
                    u190 07CB                      u191 07CA                      u277 06CC  
                    u287 06B8                      fsr0 0004                     STR_1 0009  
                   _main 0708                     btemp 007E                     start 0000  
            lcd_string@i 0075                    ?_main 0070                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0730                   ??_main 0076  
         lcd_command@cmd 0072         __end_of_lcd_data 06C0                   _keypad 0730  
       ??_lcd_initialise 0073            lcd_string@num 0073            lcd_string@str 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0708  
                ?_keypad 0070                ?_lcd_data 0070               _lcd_string 06ED  
             __stringtab 0003                  __ptext1 06ED                  __ptext2 06D4  
                __ptext3 06C0                  __ptext4 0730                  __ptext5 06AC  
             ??_lcd_data 0070     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTDbits 0008              ?_lcd_string 0073            ??_lcd_command 0070  
         __end_of_keypad 07FC      start_initialization 07FC      __end_of_lcd_command 06D4  
               ??_keypad 0073                ___latbits 0002                __pstrings 0003  
            _lcd_command 06C0              __stringbase 0008             ??_lcd_string 0074  
     __end_of_lcd_string 0708       __end_of__stringtab 0009                 _lcd_data 06AC  
         _lcd_initialise 06D4   __end_of_lcd_initialise 06ED                stringcode 0003  
               stringdir 0003                 stringtab 0003          ?_lcd_initialise 0070  
           ?_lcd_command 0070  
